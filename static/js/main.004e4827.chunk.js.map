{"version":3,"sources":["gauge/Gauge.tsx","artificialHorizon/ArtificialHorizon.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Gauge","props","canvasRef","React","createRef","className","this","height","width","ref","style","fontFamily","componentDidUpdate","orientation","renderHorizontally","renderVerticallyL","renderVerticallyR","ctx","current","getContext","value","Math","round","clearRect","translate","i","strokeStyle","font","j","k","slice","strokeText","beginPath","moveTo","lineTo","stroke","resetTransform","fillStyle","fillRect","rect","factor","toString","Component","ArtificialHorizon","headingRef","altitudeRef","speedRef","heading","altitude","speed","pitch","bank","fwidth","fheight","rotate","PI","lineWidth","arc","defaultProps","App","state","time","window","setInterval","setState","sin","cos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.004e4827.chunk.js","sourcesContent":["import React from \"react\";\nimport { Component, RefObject } from \"react\";\n\ntype GaugeProps = {\n    value: number,\n    orientation: \"horizontal\" | \"verticalL\" | \"verticalR\"\n    height: number,\n    width: number,\n    className: string | undefined\n}\nexport class Gauge extends Component<GaugeProps, {}>{\n    canvasRef: RefObject<HTMLCanvasElement>\n\n    constructor(props: GaugeProps) {\n        super(props)\n        this.canvasRef = React.createRef<HTMLCanvasElement>()\n    }\n    render() {\n        const mystyle: React.CSSProperties = {\n\n            fontFamily: \"Arial\"\n        };\n        return (\n            <div className={this.props.className}>\n                <canvas height={this.props.height} width={this.props.width} ref={this.canvasRef} style={mystyle} />\n\n            </div>\n        )\n    }\n\n    componentDidMount() {\n\n        this.componentDidUpdate()\n    }\n    componentDidUpdate() {\n\n        switch (this.props.orientation) {\n            case \"horizontal\":\n                this.renderHorizontally();\n                break;\n            case \"verticalL\":\n                this.renderVerticallyL();\n                break;\n            case \"verticalR\":\n                this.renderVerticallyR();\n                break;\n        }\n    }\n    renderHorizontally() {\n\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render gauge here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n        const factor = 5\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n        ctx.translate(-2*factor*(this.props.value-value),0)\n        /**value band */\n        for (let i = (value - 25); i <= (value + 25); i++) {\n            ctx.strokeStyle = \"white\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                let j = i % 360;\n                if (j < 0) { j = j + 360 }\n                let k = (\"000\" + j).slice(-3);\n\n                ctx.strokeText(k, width / 2 + (i - value) * 2 * factor - 14, height * 0.8);\n                ctx.beginPath();\n                ctx.moveTo(width / 2 + (i - value) * 2 * factor, height * 0.1);\n                ctx.lineTo(width / 2 + (i - value) * 2 * factor, height * 0.4);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width / 2 + (i - value) * 2 * factor, height * 0.1);\n                ctx.lineTo(width / 2 + (i - value) * 2 * factor, height * 0.8);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.5 - 25, 3, 50, height * 0.9); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n\n        ctx.rect(width * 0.5 - 25, 3, 50, height * 0.9);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n        let k = (\"000\" + value%360).slice(-3);\n        ctx.strokeText(k, width * 0.5 - 17, height * 0.8);\n\n\n\n    }\n    renderVerticallyL() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render gauge here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n\n        const factor = 10\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n        ctx.translate(0,2*factor*(this.props.value-value))\n        /**value band */\n        for (let i = (value - 10); i <= (value + 10); i++) {\n            ctx.strokeStyle = \"white\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                ctx.strokeText(i.toString(), width * 0.1, height / 2 + 5 - (i - value) * 2 * factor);\n                ctx.beginPath();\n                ctx.moveTo(width * 0.5, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width * 0.6, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.01, height / 2 - 20, width * 0.9, 40); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n        ctx.rect(width * 0.01, height / 2 - 20, width * 0.9, 40);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n        ctx.strokeText(value + \" m/s\", width * 0.1, height / 2 + 10);\n\n\n    }\n    renderVerticallyR() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n\n\n        if (!ctx)\n            return\n        //render gauge horion here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n\n\n        const factor = 5\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n\n        ctx.translate(0,2*factor*(this.props.value-value))\n        /**value band */\n        for (let i = (value - 25); i <= (value + 25); i++) {\n            ctx.strokeStyle = \"white\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                ctx.strokeText(i.toString(), width * 0.1, height / 2 + 5 - (i - value) * 2 * factor);\n                ctx.beginPath();\n                ctx.moveTo(width * 0.6, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width * 0.3, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n\n\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.01, height / 2 - 20, width * 0.99, 40); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n        ctx.rect(width * 0.01, height / 2 - 20, width * 0.99, 40);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n\n        ctx.strokeText(value + \" m\", width * 0.1, height / 2 + 10);\n\n\n    }\n}","import React from \"react\";\nimport { Component, RefObject } from \"react\";\nimport { Gauge } from \"../gauge/Gauge\";\nimport \"./ArtificialHorizon.css\"\ntype ArtificialHorizonProps = {\n    pitch: number,\n    bank: number,\n    height: number,\n    width: number,\n    heading: number,\n    altitude: number,\n    speed: number\n}\nexport class ArtificialHorizon extends Component<ArtificialHorizonProps, {}>{\n    canvasRef: RefObject<HTMLCanvasElement>\n    headingRef: RefObject<Gauge>\n    altitudeRef: RefObject<Gauge>\n    speedRef: RefObject<Gauge>\n    static defaultProps = {\n        height: 500,\n        width: 600\n    }\n    constructor(props: ArtificialHorizonProps) {\n        super(props)\n        this.canvasRef = React.createRef<HTMLCanvasElement>()\n        this.headingRef = React.createRef<Gauge>()\n        this.altitudeRef = React.createRef<Gauge>()\n        this.speedRef = React.createRef<Gauge>()\n    }\n    render() {\n        return (\n            <div className=\"ah-container\" style={{ height: this.props.height, width: this.props.width }}>\n                <canvas className=\"ah-canvas\" ref={this.canvasRef} height={this.props.height} width={this.props.width} />\n                <Gauge className=\"heading-gauge\" ref={this.headingRef} height={this.props.height * 0.08} orientation={\"horizontal\"} width={this.props.width * 0.7} value={this.props.heading} />\n                <Gauge className=\"alt-gauge\" ref={this.altitudeRef} height={this.props.height} orientation={\"verticalR\"} width={this.props.width * 0.12} value={this.props.altitude} />\n                <Gauge className=\"speed-gauge\" ref={this.speedRef} height={this.props.height} orientation={\"verticalL\"} width={this.props.width * 0.13} value={this.props.speed} />\n            </div>\n        )\n    }\n    componentDidMount() {\n        this.componentDidUpdate()\n    }\n    componentDidUpdate() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render artificial horizon here. Access pitch and bank using this.props.pitch.\n\n        const pitch = this.props.pitch\n        const bank = this.props.bank\n        const factor = 8\n        const width = this.props.width\n        const height = this.props.height\n        var fwidth = 2.5 * width\n        var fheight = factor * height\n        \n        //horizon\n        ctx.translate(width / 2, height / 2);\n        ctx.rotate(-bank * Math.PI / 180);\n        ctx.translate(0, factor * pitch);\n        ctx.fillStyle = \"brown\";\n        ctx.fillRect(-fwidth / 2, 0, fwidth, fheight / 2);\n        ctx.fillStyle = \"blue\";\n        ctx.fillRect(-fwidth / 2, -fheight / 2, fwidth, fheight / 2);\n        for (let i = -80; i <= 80; i = i + 10) {\n            ctx.lineWidth = 1;\n            ctx.moveTo(-50, factor * i);\n            ctx.lineTo(50, factor * i);\n            ctx.strokeStyle = \"white\";\n            ctx.stroke();\n        }\n        for (let i = -25; i <= 25; i = i + 10) {\n            ctx.moveTo(-30, factor * i);\n            ctx.lineTo(30, factor * i);\n            ctx.stroke();\n        }\n        for (let i = -17.5; i <= 17.5; i = i + 5) {\n            ctx.moveTo(-15, factor * i);\n            ctx.lineTo(15, factor * i);\n            ctx.stroke();\n        }\n        ctx.font = \"30px Arial\";\n        for (let i = 10; i <= 80; i = i + 10) {\n            ctx.strokeText(i + \"\", -85, -i * factor + 10);\n            ctx.strokeText(i + \"\", 50, -i * factor + 10);\n            ctx.strokeText(i + \"\", -85, i * factor + 10);\n            ctx.strokeText(i + \"\", 50, i * factor + 10);\n\n        }\n\n\n        ctx.translate(0, -factor * pitch);\n        /**triangle marker for bank */\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(0, -height / 2.5);\n        ctx.lineTo(-8, -height / 2.7);\n        ctx.lineTo(8, -height / 2.7);\n        ctx.lineTo(0, -height / 2.5);\n        ctx.strokeStyle = \"yellow\";\n        ctx.stroke();\n        \n        \n        ctx.rotate(bank * Math.PI / 180);\n        ctx.translate(-width / 2, -height / 2);\n\n        //Elements are fixed from here\n        //circle\n        ctx.beginPath();\n        ctx.arc(width / 2, height / 2, height / 2.5, 0, 2 * Math.PI);\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = \"black\";\n        ctx.stroke();\n        \n        /**scale bank */\n        ctx.translate(width / 2, height / 2);\n        ctx.rotate(30 * Math.PI / 180);\n        for (let i = -30; i <= 30; i = i + 10) {\n            ctx.beginPath();\n            ctx.moveTo(0, -height / 2.5);\n            ctx.lineTo(0, -height / 2.35);\n            if (i === 0) {\n                ctx.lineTo(0, -height / 2.25);\n            }\n            ctx.stroke();\n            ctx.rotate(-10 * Math.PI / 180);\n        }\n        ctx.rotate(40 * Math.PI / 180);\n        ctx.translate(-width / 2, -height / 2);\n\n\n        \n\n        /**aircraft symbol */\n        ctx.beginPath();\n        ctx.rect(width / 2 - 5, height / 2 - 5, 10, 10);\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = \"yellow\";\n        ctx.stroke();\n        \n        ctx.beginPath();\n        ctx.moveTo(-height / 2.3 + width / 2, height / 2);\n        ctx.lineTo(-height / 4 + width / 2, height / 2);\n        ctx.lineTo(-height / 4 + width / 2, height / 2 + 5 * factor);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(height / 2.3 + width / 2, height / 2);\n        ctx.lineTo(height / 4 + width / 2, height / 2);\n        ctx.lineTo(height / 4 + width / 2, height / 2 + 5 * factor);\n        ctx.stroke();\n\n    }\n}","import React from 'react';\nimport './App.css';\nimport { ArtificialHorizon } from './artificialHorizon/ArtificialHorizon';\nclass App extends React.Component<{},{time:number}> {\n  constructor(props:{}){\n    super(props)\n    this.state={time:0}\n    window.setInterval(()=>{\n      this.setState({time:this.state.time+0.5})\n    },50)\n  }\n  render(){\n  return (\n    <div className=\"App\">\n      <ArtificialHorizon pitch={Math.sin(this.state.time/50)* 12.5} bank={Math.sin(this.state.time/50)*25} heading={Math.sin(this.state.time/50)*45+345} altitude={-Math.cos(this.state.time/50)*100+223} speed={-Math.sin(this.state.time/50)*10+22}></ArtificialHorizon>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}