{"version":3,"sources":["gauge/Gauge.tsx","artificialHorizon/ArtificialHorizon.tsx","navigation/Navigation.tsx","logic/WebSocketDatasource.tsx","logic/Datasource.tsx","settings/Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx","logic/logic.ts","../../telemetryProtocolClient/dist/Message.js","../../telemetryProtocolClient/dist/SensorValue.js","../../telemetryProtocolClient/dist/index.js","../../telemetryProtocolClient/dist/MessageRegistry.js","../../telemetryProtocolClient/dist/MessageDTO.js"],"names":["Gauge","props","canvasRef","React","createRef","className","this","height","width","ref","style","fontFamily","componentDidUpdate","orientation","renderHorizontally","renderVerticallyL","renderVerticallyR","ctx","current","getContext","value","Math","round","clearRect","translate","i","strokeStyle","font","j","k","slice","strokeText","beginPath","moveTo","lineTo","stroke","resetTransform","fillStyle","fillRect","rect","factor","toString","Component","ArtificialHorizon","headingRef","altitudeRef","speedRef","heading","altitude","speed","pitch","bank","fwidth","fheight","rotate","PI","lineWidth","arc","defaultProps","Navigation","Grid","container","spacing","item","flexGrow","children","horizon","settings","WebSocketDataSource","baseUrl","socket","streamHook","setSocketUrl","writeData","data","send","onData","selectValue","source","newPort","url","URL","searchParams","append","encodeURI","path","fetch","href","then","res","text","close","newUrl","socketURLExtension","WebSocket","replace","onopen","ev","onmessage","console","log","arrayBuffer","buffer","error","MenuItem","Link","WebsocketPortInfo","useState","ports","selected","state","setState","timerID","useRef","window","clearInterval","localURL","setInterval","a","deviceJSON","json","useEffect","Select","onChange","event","find","p","target","map","port","manufacturer","Settings","setURL","TextField","defaultValue","openPort","bind","DemoDataSource","hook","sampleInputBuffer","socketSource","dataSources","Uint8Array","split","hexString","parseInt","Paper","Typography","component","Divider","FormControl","InputLabel","logic","currentDataSource","matchesStringValue","getSelectOption","FormHelperText","getSettings","App","onUpdate","forceUpdate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","registry","_currentDataSource","s","setStreamHook","getStreamHook","begin","MessageRegistry","readData","basicSensorValues","sensVal","Object","keys","includes","name","ReactDOM","render","StrictMode","document","getElementById","defineProperty","exports","Message","id","Error","toParse","DataView","getUint8","length","size","parse","SensorValueList","NumberSensorValue","getNumberParser","parsers","SensorValue","replaceBasicSensorValues","knownSet","uint8","raw","uint16","Uint16Array","uint32","Uint32Array","int8","Int8Array","int16","Int16Array","int32","Int32Array","float32","Float32Array","float64","Float64Array","numberType","parser","knownValues","foundValue","val","undefined","message","sensorValues","forEach","filter","position","sensorValue","Message_1","require","enumerable","get","MessageRegistry_1","SensorValue_1","MessageDTO_1","getMessageDefinitionMessage","messageDefinitionMessage","decoder","TextDecoder","messageID","descriptionString","decode","messageDTO","JSON","isSensorValueDTO","messageSensorValue","toSensorValue","newMessage","newBasicSensorVals","getBasicSensorValues","findIndex","el","push","oldIndex","messages","m","splice","addMessage","maxMessageDefinitionSize","currentMessage","ArrayBuffer","bufferView","currentPosition","previousByteZero","nextValue","index","toAdd","max","isSensorValueListDTO","isBasicSensorValueDTOConstrained","isBasicSensorValueDTO","isAbstractSensorValueDTO","toCheck","type","values","dto"],"mappings":"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","file":"static/js/main.bb7f549a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Component, RefObject } from \"react\";\n\ntype GaugeProps = {\n    value: number,\n    orientation: \"horizontal\" | \"verticalL\" | \"verticalR\"\n    height: number,\n    width: number,\n    className: string | undefined\n}\nexport class Gauge extends Component<GaugeProps, {}>{\n    canvasRef: RefObject<HTMLCanvasElement>\n\n    constructor(props: GaugeProps) {\n        super(props)\n        this.canvasRef = React.createRef<HTMLCanvasElement>()\n    }\n    render() {\n        const mystyle: React.CSSProperties = {\n\n            fontFamily: \"Arial\"\n        };\n        return (\n            <div className={this.props.className}>\n                <canvas height={this.props.height} width={this.props.width} ref={this.canvasRef} style={mystyle} />\n\n            </div>\n        )\n    }\n\n    componentDidMount() {\n\n        this.componentDidUpdate()\n    }\n    componentDidUpdate() {\n\n        switch (this.props.orientation) {\n            case \"horizontal\":\n                this.renderHorizontally();\n                break;\n            case \"verticalL\":\n                this.renderVerticallyL();\n                break;\n            case \"verticalR\":\n                this.renderVerticallyR();\n                break;\n        }\n    }\n    renderHorizontally() {\n\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render gauge here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n        const factor = 5\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n        ctx.translate(-2*factor*(this.props.value-value),0)\n        /**value band */\n        for (let i = (value - 25); i <= (value + 25); i++) {\n            ctx.strokeStyle = \"black\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                let j = i % 360;\n                if (j < 0) { j = j + 360 }\n                let k = (\"000\" + j).slice(-3);\n\n                ctx.strokeText(k, width / 2 + (i - value) * 2 * factor - 14, height * 0.8);\n                ctx.beginPath();\n                ctx.moveTo(width / 2 + (i - value) * 2 * factor, height * 0.1);\n                ctx.lineTo(width / 2 + (i - value) * 2 * factor, height * 0.4);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width / 2 + (i - value) * 2 * factor, height * 0.1);\n                ctx.lineTo(width / 2 + (i - value) * 2 * factor, height * 0.8);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.5 - 25, 3, 50, height * 0.9); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n\n        ctx.rect(width * 0.5 - 25, 3, 50, height * 0.9);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n        let k = (\"000\" + value%360).slice(-3);\n        ctx.strokeText(k, width * 0.5 - 17, height * 0.8);\n\n\n\n    }\n    renderVerticallyL() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render gauge here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n\n        const factor = 10\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n        ctx.translate(0,2*factor*(this.props.value-value))\n        /**value band */\n        for (let i = (value - 10); i <= (value + 10); i++) {\n            ctx.strokeStyle = \"black\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                ctx.strokeText(i.toString(), width * 0.1, height / 2 + 5 - (i - value) * 2 * factor);\n                ctx.beginPath();\n                ctx.moveTo(width * 0.5, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width * 0.6, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.01, height / 2 - 20, width * 0.9, 40); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n        ctx.rect(width * 0.01, height / 2 - 20, width * 0.9, 40);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n        ctx.strokeText(value + \" m/s\", width * 0.1, height / 2 + 10);\n\n\n    }\n    renderVerticallyR() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n\n\n        if (!ctx)\n            return\n        //render gauge horion here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n\n\n        const factor = 5\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n\n        ctx.translate(0,2*factor*(this.props.value-value))\n        /**value band */\n        for (let i = (value - 25); i <= (value + 25); i++) {\n            ctx.strokeStyle = \"black\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                ctx.strokeText(i.toString(), width * 0.1, height / 2 + 5 - (i - value) * 2 * factor);\n                ctx.beginPath();\n                ctx.moveTo(width * 0.6, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width * 0.3, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n\n\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.01, height / 2 - 20, width * 0.99, 40); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n        ctx.rect(width * 0.01, height / 2 - 20, width * 0.99, 40);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n\n        ctx.strokeText(value + \" m\", width * 0.1, height / 2 + 10);\n\n\n    }\n}","import React from \"react\";\nimport { Component, RefObject } from \"react\";\nimport { Gauge } from \"../gauge/Gauge\";\nimport \"./ArtificialHorizon.css\"\ntype ArtificialHorizonProps = {\n    pitch: number,\n    bank: number,\n    height: number,\n    width: number,\n    heading: number,\n    altitude: number,\n    speed: number\n}\nexport class ArtificialHorizon extends Component<ArtificialHorizonProps, {}>{\n    canvasRef: RefObject<HTMLCanvasElement>\n    headingRef: RefObject<Gauge>\n    altitudeRef: RefObject<Gauge>\n    speedRef: RefObject<Gauge>\n    static defaultProps = {\n        height: 500,\n        width: 600\n    }\n    constructor(props: ArtificialHorizonProps) {\n        super(props)\n        this.canvasRef = React.createRef<HTMLCanvasElement>()\n        this.headingRef = React.createRef<Gauge>()\n        this.altitudeRef = React.createRef<Gauge>()\n        this.speedRef = React.createRef<Gauge>()\n    }\n    render() {\n        return (\n            <div className=\"ah-container\" style={{ height: this.props.height, width: this.props.width }}>\n                <canvas className=\"ah-canvas\" ref={this.canvasRef} height={this.props.height} width={this.props.width} />\n                <Gauge className=\"heading-gauge\" ref={this.headingRef} height={this.props.height * 0.08} orientation={\"horizontal\"} width={this.props.width * 0.7} value={this.props.heading} />\n                <Gauge className=\"alt-gauge\" ref={this.altitudeRef} height={this.props.height} orientation={\"verticalR\"} width={this.props.width * 0.12} value={this.props.altitude} />\n                <Gauge className=\"speed-gauge\" ref={this.speedRef} height={this.props.height} orientation={\"verticalL\"} width={this.props.width * 0.13} value={this.props.speed} />\n            </div>\n        )\n    }\n    componentDidMount() {\n        this.componentDidUpdate()\n    }\n    componentDidUpdate() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render artificial horizon here. Access pitch and bank using this.props.pitch.\n\n        const pitch = this.props.pitch\n        const bank = this.props.bank\n        const factor = 8\n        const width = this.props.width\n        const height = this.props.height\n        var fwidth = 2.5 * width\n        var fheight = factor * height\n        //horizon\n        ctx.translate(width / 2, height / 2);\n        ctx.rotate(-bank * Math.PI / 180);\n        ctx.translate(0, factor * pitch);\n        ctx.fillStyle = \"brown\";\n        ctx.fillRect(-fwidth / 2, 0, fwidth, fheight / 2);\n        ctx.fillStyle = \"blue\";\n        ctx.fillRect(-fwidth / 2, -fheight / 2, fwidth, fheight / 2);\n        for (let i = -80; i <= 80; i = i + 10) {\n            ctx.lineWidth = 1;\n            ctx.moveTo(-50, factor * i);\n            ctx.lineTo(50, factor * i);\n            ctx.strokeStyle = \"white\";\n            ctx.stroke();\n        }\n        for (let i = -25; i <= 25; i = i + 10) {\n            ctx.moveTo(-30, factor * i);\n            ctx.lineTo(30, factor * i);\n            ctx.stroke();\n        }\n        for (let i = -17.5; i <= 17.5; i = i + 5) {\n            ctx.moveTo(-15, factor * i);\n            ctx.lineTo(15, factor * i);\n            ctx.stroke();\n        }\n        ctx.font = \"30px Arial\";\n        for (let i = 10; i <= 80; i = i + 10) {\n            ctx.strokeText(i + \"\", -85, -i * factor + 10);\n            ctx.strokeText(i + \"\", 50, -i * factor + 10);\n            ctx.strokeText(i + \"\", -85, i * factor + 10);\n            ctx.strokeText(i + \"\", 50, i * factor + 10);\n\n        }\n\n\n        ctx.translate(0, -factor * pitch);\n        /**scale bank */\n        ctx.rotate(30 * Math.PI / 180);\n        for (let i = -30; i <= 30; i = i + 10) {\n            ctx.beginPath();\n            ctx.moveTo(0, -height / 2.5);\n            ctx.lineTo(0, -height / 2.35);\n            if (i === 0) {\n                ctx.lineTo(0, -height / 2.25);\n            }\n            ctx.stroke();\n            ctx.rotate(-10 * Math.PI / 180);\n        }\n        ctx.rotate(40 * Math.PI / 180);\n\n        ctx.rotate(bank * Math.PI / 180);\n        ctx.translate(-width / 2, -height / 2);\n\n        //circle\n        ctx.beginPath();\n        ctx.arc(width / 2, height / 2, height / 2.5, 0, 2 * Math.PI);\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = \"black\";\n        ctx.stroke();\n        /**triangle marker for bank */\n        ctx.translate(width / 2, height / 2);\n        ctx.beginPath();\n        ctx.moveTo(0, -height / 2.5);\n        ctx.lineTo(-8, -height / 2.3);\n        ctx.lineTo(8, -height / 2.3);\n        ctx.lineTo(0, -height / 2.5);\n        ctx.strokeStyle = \"yellow\";\n        ctx.stroke();\n        ctx.translate(-width / 2, -height / 2);\n\n        ctx.beginPath();\n        ctx.rect(width / 2 - 5, height / 2 - 5, 10, 10);\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = \"yellow\";\n        ctx.stroke();\n        /**aircraft symbol */\n        ctx.beginPath();\n        ctx.moveTo(-height / 2.3 + width / 2, height / 2);\n        ctx.lineTo(-height / 4 + width / 2, height / 2);\n        ctx.lineTo(-height / 4 + width / 2, height / 2 + 5 * factor);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(height / 2.3 + width / 2, height / 2);\n        ctx.lineTo(height / 4 + width / 2, height / 2);\n        ctx.lineTo(height / 4 + width / 2, height / 2 + 5 * factor);\n        ctx.stroke();\n\n    }\n}","import { Grid } from '@material-ui/core'\nimport React from 'react'\nimport \"./Navigation.css\"\n\n\n\ntype NavigationProps = {\n    children: {\n        horizon: React.ReactNode,\n        settings: React.ReactNode\n    }\n}\nexport const Navigation: React.FC<NavigationProps> = (props) => (\n    <div>\n        <Grid container spacing={3} className=\"nav-grid\" >\n            <Grid item style={{ flexGrow: 0 }}>\n                {props.children.horizon}\n            </Grid>\n\n            <Grid item>\n                {props.children.settings}\n            </Grid>\n        </Grid>\n    </div>\n)\n","import { Link, MenuItem, Select, TextField } from \"@material-ui/core\"\nimport React, { useEffect, useRef } from \"react\"\nimport { DataSource, AbstractStreamHook } from \"./Datasource\"\n\nexport class WebSocketDataSource implements DataSource {\n    baseUrl: string = \"\"\n    socket: WebSocket | null = null\n    streamHook: AbstractStreamHook\n    constructor(baseUrl: string = \"http://localhost:9091\") {\n        this.setSocketUrl(baseUrl)\n        this.streamHook = {\n            writeData: data => this.socket?.send(data),\n            onData: null\n        }\n    }\n    matchesStringValue(selectValue: string): boolean {\n        return selectValue === \"websocket-\" + this.baseUrl\n    }\n    getSettings(): React.ReactNode {\n        return <Settings source={this} />\n    }\n    openPort(newPort: PortInfo) {\n        const url = new URL(this.baseUrl + \"/open-port-request?\")\n        url.searchParams.append(\"path\", encodeURI(newPort.path))\n        url.searchParams.append(\"baud\", \"9600\")\n        fetch(url.href).then(res => {\n            res.text().then(text => {\n                if (text === \"success\") {\n                    this.setSocketUrl(this.baseUrl, \"/device\" + newPort.path)\n                }\n            })\n        })\n    }\n    close(): void {\n        this.socket?.close()\n    }\n    setSocketUrl(newUrl: string, socketURLExtension = \"\") {\n        this.socket?.close()\n        try {\n            this.socket = new WebSocket(newUrl.replace(\"http://\", \"ws://\") + socketURLExtension)\n            this.socket.onopen = (ev) => {\n                this.socket?.send(\"Hallo Welt\")\n            }\n            this.socket.onmessage = (ev) => {\n                console.log(ev.data);\n                try {\n                    (ev.data as Blob).arrayBuffer().then((buffer) => {\n                        this.streamHook.onData?.(buffer)\n                    })\n                } catch (error) {\n\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n        this.baseUrl = newUrl\n    }\n    getSelectOption(): React.ReactNode {\n        return (<MenuItem value={\"websocket-\" + this.baseUrl}>\n            <p>Websocket <Link>{this.baseUrl}</Link></p>\n        </MenuItem>)\n    }\n    getStreamHook(): AbstractStreamHook {\n        this.streamHook.writeData = data => this.socket?.send(data)\n        return this.streamHook\n    }\n    begin() { }\n}\n\nconst WebsocketPortInfo: React.FC<{ url: string, onChange: (newPort: PortInfo) => void }> = (props) => {\n    const [state, setState] = React.useState<{ ports: PortInfo[], selected: string }>({ ports: [], selected: \"\" })\n    const timerID = useRef(-1)\n    window.clearInterval(timerID.current)\n    const localURL = props.url\n    timerID.current = window.setInterval(async () => {\n        try {\n\n            const deviceJSON = await fetch(localURL + \"/devices\")\n            const ports = await deviceJSON.json()\n            setState({ ports: ports, selected: state.selected })\n        } catch (error) {\n            console.log(error)\n        }\n    }, 1000)\n    useEffect(() => {\n        return () => {\n            console.log(\"Clearing timer \", timerID.current, \"before exit\")\n            window.clearInterval(timerID.current)\n        }\n    }, [])\n    return (\n        <Select value={state.selected} onChange={(event) => {\n            const newPort = state.ports.find(p => p.path === event.target.value)\n            if (newPort)\n                props.onChange(newPort)\n            setState({ ports: state.ports, selected: event.target.value as string })\n        }}>\n            {\n                state.ports.map(port => (\n                    <MenuItem value={port.path}>{port.path} ({port.manufacturer})</MenuItem>\n                ))\n            }\n        </Select >\n    )\n\n}\n\ninterface PortInfo {\n    path: string;\n    manufacturer?: string;\n    serialNumber?: string;\n    pnpId?: string;\n    locationId?: string;\n    productId?: string;\n    vendorId?: string;\n}\n\nconst Settings: React.FC<{ source: WebSocketDataSource }> = (props) => {\n    const [url, setURL] = React.useState<string>(props.source.baseUrl)\n    return (\n        <div>\n            <TextField defaultValue={props.source.baseUrl} onChange={(event) => {\n                props.source.setSocketUrl(event.target.value)\n                setURL(event.target.value)\n            }} />\n            <WebsocketPortInfo url={url} onChange={props.source.openPort.bind(props.source)} />\n        </div>\n    )\n}","import {  MenuItem } from \"@material-ui/core\";\nimport React from \"react\"\nimport { WebSocketDataSource } from \"./WebSocketDatasource\";\nexport class AbstractStreamHook {\n    /**this is called when data arrive on the plane */\n    onData: ((data: ArrayBuffer) => void) | null = null;\n    /** call this to send data to the plane */\n    writeData: (data: ArrayBuffer) => void = data => { };\n}\nexport interface DataSource {\n    getSelectOption(): React.ReactNode\n    getStreamHook(): AbstractStreamHook\n    getSettings(): React.ReactNode\n    close(): void\n    begin(): void\n    matchesStringValue(selectValue: string): boolean\n}\nexport class DemoDataSource implements DataSource {\n    matchesStringValue(selectValue: string) {\n        return selectValue === \"demo\"\n    }\n    hook: AbstractStreamHook = {\n        writeData: data => console.log(data),\n        onData: null\n    }\n    getSettings(): React.ReactNode {\n        return null\n    }\n    getSelectOption(): React.ReactNode {\n        return (<MenuItem value=\"demo\">Demo data</MenuItem>)\n    }\n    getStreamHook(): AbstractStreamHook {\n        return this.hook\n    }\n    close() { }\n    begin() {\n        this.hook.onData?.(sampleInputBuffer)\n    }\n}\nconst socketSource = new WebSocketDataSource()\nconst demoSource = new DemoDataSource()\nexport const dataSources = [demoSource, socketSource]\n\n\n\nconst sampleBinaryInput = \"00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 0A 5D 0A 7D 00 01 00 11 00 00 00 00 C0 41 18 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 C8 41 19 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 D0 41 1A 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 D8 41 1B 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 E0 41 1C 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 E8 41 1D 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 F0 41 1E 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 F8 41 1F 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 00 00 42 20 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 04 42 21 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 08 42 22 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 0C 42 23 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 10 42 24 00 00 00 00 00 00 00 01 \"\nconst sampleInputBuffer = new Uint8Array(sampleBinaryInput.split(\" \").map(hexString => parseInt(hexString, 16)))","import { FormControl, FormHelperText, InputLabel, makeStyles, Select } from '@material-ui/core'\nimport { Divider, Paper, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { dataSources } from '../logic/Datasource';\nimport { Logic } from '../logic/logic'\nimport \"./settings.css\"\n// const useStyles = makeStyles((theme) => ({\n//     button: {\n//         display: 'block',\n//         marginTop: theme.spacing(2),\n//     },\n//     formControl: {\n//         margin: theme.spacing(1),\n//         minWidth: 160,\n//     },\n// }));\n\n\ntype SettingsProps = {\n    logic: Logic\n}\nexport const Settings: React.FC<SettingsProps> = (props) => {\n    const [value, selectValue] = React.useState<string>(\"\")\n    //const classes = useStyles()\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        props.logic.currentDataSource?.close()\n        props.logic.currentDataSource = dataSources.find((source) => source.matchesStringValue(event.target.value as string)) || null\n        selectValue(event.target.value as string)\n    }\n    return (\n\n        <Paper className=\"settings-grid-element\">\n            <Typography component=\"h1\">Settings</Typography>\n            <Divider />\n            <FormControl className=\"settings-form\">\n                <InputLabel>Data source</InputLabel>\n                <Select value={value} onChange={handleChange}>\n                    {dataSources.map(source => source.getSelectOption())}\n                </Select>\n                <FormHelperText>Data source to use</FormHelperText>\n                {props.logic.currentDataSource?.getSettings()}\n            </FormControl>\n        </Paper>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { ArtificialHorizon } from './artificialHorizon/ArtificialHorizon';\nimport { Logic } from './logic/logic';\nimport { Navigation } from './navigation/Navigation';\nimport { Settings } from './settings/Settings';\nclass App extends React.Component<{ logic: Logic }, {}> {\n  constructor(props: { logic: Logic }) {\n    super(props)\n    this.props.logic.onUpdate = () => {\n      this.forceUpdate()\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation>\n          {{\n            horizon: <ArtificialHorizon pitch={this.props.logic.data.pitch} bank={this.props.logic.data.bank} heading={this.props.logic.data.heading} altitude={this.props.logic.data.altitude} speed={this.props.logic.data.speed} />,\n            settings: <Settings logic={this.props.logic}/>\n          }}\n        </Navigation>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Logic } from './logic/logic';\n//const socket = new WebSocket(\"localhost:8081\")\nconst logic = new Logic()\nReactDOM.render(\n  <React.StrictMode>\n    <App logic={logic} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { MessageRegistry } from \"telemetryprotocolclient/dist/index\"\nimport { AbstractStreamHook, DataSource } from \"./Datasource\"\n\n\nexport class Logic {\n    registry: MessageRegistry | null = null\n    onUpdate: () => void\n    data = {\n        pitch: 0,\n        bank: 0,\n        heading: 0,\n        speed: 0,\n        altitude: 0\n    }\n    private _currentDataSource: DataSource | null = null\n    private streamHook: AbstractStreamHook | null = null\n    constructor(onUpdate = () => { }) {\n        this.onUpdate = onUpdate\n    }\n    set currentDataSource(s: DataSource | null) {\n        this._currentDataSource = s\n        this.setStreamHook(s?.getStreamHook() || null)\n        s?.begin()\n    }\n    get currentDataSource() { return this._currentDataSource }\n    private setStreamHook(streamHook: AbstractStreamHook | null) {\n        this.streamHook = streamHook\n        this.registry = new MessageRegistry()\n        if (streamHook)\n            streamHook.onData = (data) => {\n                if (!this.registry)\n                    return\n                this.registry.readData(data)\n                for (const sensVal of this.registry.basicSensorValues || []) {\n                    if (Object.keys(this.data).includes(sensVal.name)) {\n                        (this.data as any)[sensVal.name] = sensVal.value\n                    }\n                }\n                this.onUpdate()\n            }\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Message = void 0;\nclass Message {\n    constructor(value, id) {\n        if (id <= 1 || id > 255) {\n            throw new Error(\"id not in valid range\");\n        }\n        this.id = id;\n        this.value = value;\n    }\n    parse(toParse) {\n        const messageID = new DataView(toParse).getUint8(0);\n        if (new Uint8Array(toParse).length != this.value.size) {\n            //return false if wrong length\n            return false;\n        }\n        this.value.parse(toParse);\n        return true;\n    }\n}\nexports.Message = Message;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SensorValueList = exports.NumberSensorValue = exports.getNumberParser = exports.parsers = exports.SensorValue = void 0;\nclass SensorValue {\n    constructor() {\n        this.name = \"\";\n        this.size = 0;\n        this.replaceBasicSensorValues = (knownSet) => this;\n    }\n}\nexports.SensorValue = SensorValue;\nexports.parsers = {\n    uint8: {\n        name: \"uint8\",\n        size: 1,\n        parse: (raw) => new Uint8Array(raw)[0]\n    },\n    uint16: {\n        name: \"uint16\",\n        size: 2,\n        parse: (raw) => new Uint16Array(raw)[0]\n    },\n    uint32: {\n        name: \"uint32\",\n        size: 4,\n        parse: (raw) => new Uint32Array(raw)[0]\n    },\n    int8: {\n        name: \"int8\",\n        size: 1,\n        parse: (raw) => new Int8Array(raw)[0]\n    },\n    int16: {\n        name: \"int16\",\n        size: 2,\n        parse: (raw) => new Int16Array(raw)[0]\n    },\n    int32: {\n        name: \"int32\",\n        size: 4,\n        parse: (raw) => new Int32Array(raw)[0]\n    },\n    float32: {\n        name: \"float32\",\n        size: 4,\n        parse: (raw) => new Float32Array(raw)[0]\n    },\n    float64: {\n        name: \"float64\",\n        size: 4,\n        parse: (raw) => new Float64Array(raw)[0]\n    },\n};\n/**\n *\n * @param numberType for example int or float\n * @param size in bytes\n * @returns number parser\n */\nconst getNumberParser = (numberType, size) => {\n    return exports.parsers[numberType + (8 * size)];\n};\nexports.getNumberParser = getNumberParser;\nclass NumberSensorValue extends SensorValue {\n    constructor(name, parser) {\n        super();\n        this.value = 0;\n        this.name = name;\n        this.parser = parser;\n        this.size = parser.size;\n        this.replaceBasicSensorValues = (knownValues) => {\n            const foundValue = knownValues.find(val => val.name == this.name);\n            return foundValue == undefined ? this : foundValue;\n        };\n    }\n    getBasicSensorValues() {\n        return [this];\n    }\n    parse(message) {\n        this.value = this.parser.parse(message);\n        return true;\n    }\n}\nexports.NumberSensorValue = NumberSensorValue;\nclass SensorValueList extends SensorValue {\n    constructor(sensorValues) {\n        super();\n        this.sensorValues = sensorValues;\n        this.sensorValues.forEach(val => this.size += val.size);\n        this.replaceBasicSensorValues = (knownSet) => {\n            for (const i in this.sensorValues) {\n                this.sensorValues[i] = this.sensorValues[i].replaceBasicSensorValues(knownSet);\n            }\n            return this;\n        };\n    }\n    getBasicSensorValues() {\n        return this.sensorValues.filter(val => val instanceof NumberSensorValue);\n    }\n    parse(message) {\n        let position = 0;\n        for (let sensorValue of this.sensorValues) {\n            sensorValue.parse(message.slice(position, position + sensorValue.size));\n            position += sensorValue.size;\n        }\n        return position == this.size;\n    }\n}\nexports.SensorValueList = SensorValueList;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberSensorValue = exports.SensorValueList = exports.MessageRegistry = exports.Message = void 0;\nconst Message_1 = require(\"./Message\");\nObject.defineProperty(exports, \"Message\", { enumerable: true, get: function () { return Message_1.Message; } });\nconst MessageRegistry_1 = require(\"./MessageRegistry\");\nObject.defineProperty(exports, \"MessageRegistry\", { enumerable: true, get: function () { return MessageRegistry_1.MessageRegistry; } });\nconst SensorValue_1 = require(\"./SensorValue\");\nObject.defineProperty(exports, \"SensorValueList\", { enumerable: true, get: function () { return SensorValue_1.SensorValueList; } });\nObject.defineProperty(exports, \"NumberSensorValue\", { enumerable: true, get: function () { return SensorValue_1.NumberSensorValue; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageRegistry = void 0;\nconst Message_1 = require(\"./Message\");\nconst MessageDTO_1 = require(\"./MessageDTO\");\nconst getMessageDefinitionMessage = (registry) => {\n    const messageDefinitionMessage = {\n        id: 255,\n        parse: (toParse) => {\n            return messageDefinitionMessage.value.parse(toParse);\n        },\n        value: {\n            name: \"message\",\n            parse: (message) => {\n                const decoder = new TextDecoder(\"utf-8\");\n                const messageID = new Uint8Array(message)[0];\n                const descriptionString = decoder.decode(message.slice(1));\n                try {\n                    const messageDTO = JSON.parse(descriptionString);\n                    if (MessageDTO_1.isSensorValueDTO(messageDTO)) {\n                        const messageSensorValue = MessageDTO_1.toSensorValue(messageDTO);\n                        const newMessage = new Message_1.Message(messageSensorValue, messageID);\n                        newMessage.value = newMessage.value.replaceBasicSensorValues(registry.basicSensorValues);\n                        //push new basic snesor values dominantly\n                        const newBasicSensorVals = messageSensorValue.getBasicSensorValues();\n                        registry.basicSensorValues = registry.basicSensorValues.filter(val => newBasicSensorVals.findIndex(el => el.name === val.name) === -1);\n                        registry.basicSensorValues.push(...newBasicSensorVals);\n                        messageDefinitionMessage.value.message = newMessage;\n                        // remove old message with same id if it exists\n                        const oldIndex = registry.messages.findIndex(m => m.id == newMessage.id);\n                        if (oldIndex != -1) {\n                            console.log(\"attention, added same message id again!\");\n                            registry.messages.splice(oldIndex, 1);\n                        }\n                        registry.addMessage(newMessage);\n                    }\n                }\n                catch (error) {\n                    return false;\n                }\n                return true;\n            },\n            size: maxMessageDefinitionSize,\n            replaceBasicSensorValues: val => messageDefinitionMessage.value,\n            message: null,\n            getBasicSensorValues: () => []\n        },\n        registry: registry\n    };\n    return messageDefinitionMessage;\n};\nclass MessageRegistry {\n    constructor(messages = []) {\n        this.currentMessage = null;\n        this.buffer = new ArrayBuffer(0);\n        this.bufferView = new Uint8Array(this.buffer);\n        this.currentPosition = 0;\n        this.previousByteZero = false;\n        this.basicSensorValues = [];\n        this.messages = [];\n        messages.push(getMessageDefinitionMessage(this));\n        messages.forEach(m => this.addMessage(m));\n    }\n    readData(data) {\n        for (let nextValue of new Uint8Array(data)) {\n            if (this.currentPosition >= (this.currentMessage !== null ? this.currentMessage.value : 0)) {\n                this.currentPosition = 0;\n            }\n            if (this.previousByteZero) {\n                if (nextValue == 0) {\n                    //zero occured in message\n                    this.bufferView[this.currentPosition] = nextValue;\n                    this.currentPosition++;\n                }\n                else if (nextValue == 1) {\n                    // End of message reached\n                    if (this.currentMessage) {\n                        this.currentMessage.parse(this.buffer.slice(0, this.currentPosition));\n                        this.currentMessage = null;\n                    }\n                }\n                else {\n                    //start of new message\n                    const index = this.messages.findIndex(m => m.id == nextValue);\n                    this.currentMessage = index == -1 ? null : this.messages[index];\n                }\n                this.previousByteZero = false;\n            }\n            else {\n                if (nextValue == 0) {\n                    this.previousByteZero = true;\n                }\n                else {\n                    this.bufferView[this.currentPosition] = nextValue;\n                    this.currentPosition++;\n                }\n            }\n        }\n    }\n    addMessage(toAdd) {\n        this.messages.push(toAdd);\n        this.buffer = new ArrayBuffer(Math.max(...this.messages.map(m => m.value.size)));\n        this.bufferView = new Uint8Array(this.buffer);\n    }\n    static fromJSON(json) {\n    }\n}\nexports.MessageRegistry = MessageRegistry;\nconst maxMessageDefinitionSize = 10000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toSensorValue = exports.isSensorValueListDTO = exports.isSensorValueDTO = exports.isBasicSensorValueDTOConstrained = exports.isBasicSensorValueDTO = void 0;\nconst SensorValue_1 = require(\"./SensorValue\");\nfunction isAbstractSensorValueDTO(toCheck) {\n    return toCheck.name !== undefined && toCheck.size !== undefined;\n}\nfunction isBasicSensorValueDTO(toCheck) {\n    return isAbstractSensorValueDTO(toCheck) && toCheck.type !== undefined;\n}\nexports.isBasicSensorValueDTO = isBasicSensorValueDTO;\nfunction isBasicSensorValueDTOConstrained(toCheck) {\n    return toCheck.values === undefined;\n}\nexports.isBasicSensorValueDTOConstrained = isBasicSensorValueDTOConstrained;\nfunction isSensorValueDTO(toCheck) {\n    return isBasicSensorValueDTO(toCheck) || !isSensorValueListDTO(toCheck);\n}\nexports.isSensorValueDTO = isSensorValueDTO;\nfunction isSensorValueListDTO(toCheck) {\n    try {\n        if (!isAbstractSensorValueDTO(toCheck))\n            return false;\n        const values = toCheck.values;\n        if (values === undefined)\n            return false;\n        for (const val of values) {\n            if (!isBasicSensorValueDTO(val) || !isSensorValueListDTO(val)) {\n                return false;\n            }\n        }\n    }\n    catch (error) {\n        return false;\n    }\n    return true;\n}\nexports.isSensorValueListDTO = isSensorValueListDTO;\nfunction toSensorValue(dto) {\n    if (isBasicSensorValueDTOConstrained(dto)) {\n        return new SensorValue_1.NumberSensorValue(dto.name, SensorValue_1.getNumberParser(dto.type, dto.size));\n    }\n    else {\n        const sensorValues = dto.values.map(val => toSensorValue(val));\n        return new SensorValue_1.SensorValueList(sensorValues);\n    }\n}\nexports.toSensorValue = toSensorValue;\n"],"sourceRoot":""}