{"version":3,"sources":["../../telemetryProtocolClient/dist/MessageRegistry.js","../../telemetryProtocolClient/dist/MessageDTO.js","gauge/Gauge.tsx","artificialHorizon/ArtificialHorizon.tsx","navigation/Navigation.tsx","logic/WebSocketDatasource.tsx","logic/Datasource.tsx","settings/Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx","logic/logic.ts","../../telemetryProtocolClient/dist/SensorValue.js","../../telemetryProtocolClient/dist/Message.js","../../telemetryProtocolClient/dist/index.js"],"names":["Object","defineProperty","exports","value","MessageRegistry","Message_1","require","MessageDTO_1","getMessageDefinitionMessage","registry","messageDefinitionMessage","id","parse","toParse","name","message","decoder","TextDecoder","messageID","Uint8Array","descriptionString","decode","slice","messageDTO","JSON","isSensorValueDTO","messageSensorValue","toSensorValue","newMessage","Message","replaceBasicSensorValues","basicSensorValues","newBasicSensorVals","getBasicSensorValues","filter","val","findIndex","el","push","oldIndex","messages","m","console","log","splice","addMessage","error","serialize","size","maxMessageDefinitionSize","onMessage","s","this","currentMessage","buffer","ArrayBuffer","bufferView","currentPosition","previousByteZero","streamMessage","StreamMessage","forEach","data","nextValue","index","toAdd","Math","max","map","_value","toEncode","target","byte","isSensorValueListDTO","isBasicSensorValueDTOConstrained","isBasicSensorValueDTO","SensorValue_1","isAbstractSensorValueDTO","toCheck","undefined","type","values","dto","NumberSensorValue","getNumberParser","sensorValues","SensorValueList","Gauge","props","canvasRef","React","createRef","className","height","width","ref","style","fontFamily","componentDidUpdate","orientation","renderHorizontally","renderVerticallyL","renderVerticallyR","ctx","current","getContext","round","clearRect","translate","i","strokeStyle","font","j","k","strokeText","beginPath","moveTo","lineTo","stroke","resetTransform","fillStyle","fillRect","rect","factor","toString","Component","ArtificialHorizon","headingRef","altitudeRef","speedRef","heading","altitude","speed","pitch","bank","fwidth","fheight","rotate","PI","lineWidth","arc","defaultProps","Navigation","Grid","container","spacing","item","flexGrow","children","horizon","settings","WebSocketDataSource","baseUrl","socket","streamHook","setSocketUrl","writeData","send","onData","selectValue","source","newPort","close","url","URL","searchParams","append","encodeURI","path","fetch","href","then","res","text","newUrl","socketURLExtension","parsedURL","replace","WebSocket","onopen","ev","onmessage","arrayBuffer","MenuItem","Link","WebsocketPortInfo","useState","ports","selected","state","setState","timerID","useRef","window","clearInterval","localURL","setInterval","a","deviceJSON","json","useEffect","Select","onChange","event","find","p","port","manufacturer","Settings","setURL","TextField","defaultValue","openPort","bind","DemoDataSource","hook","sampleInputBuffer","socketSource","dataSources","split","hexString","parseInt","Paper","Typography","component","Divider","FormControl","InputLabel","htmlFor","logic","currentDataSource","matchesStringValue","getSelectOption","FormHelperText","getSettings","App","onUpdate","forceUpdate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","_currentDataSource","setStreamHook","getStreamHook","begin","readData","sensVal","keys","includes","ReactDOM","render","StrictMode","document","getElementById","parsers","SensorValue","knownSet","uint8","raw","number","uint16","Uint16Array","uint32","Uint32Array","int8","Int8Array","int16","Int16Array","int32","Int32Array","float32","Float32Array","float64","Float64Array","numberType","parser","knownValues","foundValue","position","sensorValue","toReturn","sens","set","Error","DataView","getUint8","length","StreamMessageSensorValue","outputBuffer","encodedMessages","TextEncoder","encode","encodeString","reduce","prev","curr","from","enumerable","get","MessageRegistry_1"],"mappings":"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","file":"static/js/main.0f5251d7.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageRegistry = void 0;\nconst Message_1 = require(\"./Message\");\nconst MessageDTO_1 = require(\"./MessageDTO\");\nconst getMessageDefinitionMessage = (registry) => {\n    const messageDefinitionMessage = {\n        id: 255,\n        parse: (toParse) => {\n            return messageDefinitionMessage.value.parse(toParse);\n        },\n        value: {\n            name: \"message\",\n            parse: (message) => {\n                const decoder = new TextDecoder(\"utf-8\");\n                const messageID = new Uint8Array(message)[0];\n                const descriptionString = decoder.decode(message.slice(1));\n                try {\n                    const messageDTO = JSON.parse(descriptionString);\n                    if (MessageDTO_1.isSensorValueDTO(messageDTO)) {\n                        const messageSensorValue = MessageDTO_1.toSensorValue(messageDTO);\n                        const newMessage = new Message_1.Message(messageSensorValue, messageID);\n                        newMessage.value = newMessage.value.replaceBasicSensorValues(registry.basicSensorValues);\n                        //push new basic snesor values dominantly\n                        const newBasicSensorVals = messageSensorValue.getBasicSensorValues();\n                        registry.basicSensorValues = registry.basicSensorValues.filter(val => newBasicSensorVals.findIndex(el => el.name === val.name) === -1);\n                        registry.basicSensorValues.push(...newBasicSensorVals);\n                        messageDefinitionMessage.value.message = newMessage;\n                        // remove old message with same id if it exists\n                        const oldIndex = registry.messages.findIndex(m => m.id == newMessage.id);\n                        if (oldIndex != -1) {\n                            console.log(\"attention, added same message id again!\");\n                            registry.messages.splice(oldIndex, 1);\n                        }\n                        registry.addMessage(newMessage);\n                    }\n                }\n                catch (error) {\n                    return false;\n                }\n                return true;\n            },\n            serialize: () => {\n                // this tells the sender to resend all messag definitions\n                return new Uint8Array([]);\n            },\n            size: maxMessageDefinitionSize,\n            replaceBasicSensorValues: val => messageDefinitionMessage.value,\n            message: null,\n            getBasicSensorValues: () => []\n        },\n        registry: registry\n    };\n    return messageDefinitionMessage;\n};\nclass MessageRegistry {\n    constructor(messages = [], onMessage = (s) => console.log(s)) {\n        this.currentMessage = null;\n        this.buffer = new ArrayBuffer(0);\n        this.bufferView = new Uint8Array(this.buffer);\n        this.currentPosition = 0;\n        this.previousByteZero = false;\n        this.basicSensorValues = [];\n        this.messages = [];\n        messages.push(getMessageDefinitionMessage(this));\n        this.streamMessage = new Message_1.StreamMessage(onMessage);\n        messages.push(this.streamMessage);\n        messages.forEach(m => this.addMessage(m));\n    }\n    readData(data) {\n        for (let nextValue of new Uint8Array(data)) {\n            if (this.currentPosition >= (this.currentMessage !== null ? this.currentMessage.value : 0)) {\n                this.currentPosition = 0;\n            }\n            if (this.previousByteZero) {\n                if (nextValue == 0) {\n                    //zero occured in message\n                    this.bufferView[this.currentPosition] = nextValue;\n                    this.currentPosition++;\n                }\n                else if (nextValue == 1) {\n                    // End of message reached\n                    if (this.currentMessage) {\n                        this.currentMessage.parse(this.buffer.slice(0, this.currentPosition));\n                        this.currentMessage = null;\n                    }\n                }\n                else {\n                    //start of new message\n                    const index = this.messages.findIndex(m => m.id == nextValue);\n                    this.currentMessage = index == -1 ? null : this.messages[index];\n                }\n                this.previousByteZero = false;\n            }\n            else {\n                if (nextValue == 0) {\n                    this.previousByteZero = true;\n                }\n                else {\n                    this.bufferView[this.currentPosition] = nextValue;\n                    this.currentPosition++;\n                }\n            }\n        }\n    }\n    addMessage(toAdd) {\n        this.messages.push(toAdd);\n        this.buffer = new ArrayBuffer(Math.max(...this.messages.map(m => m.value.size)));\n        this.bufferView = new Uint8Array(this.buffer);\n    }\n    set onMessage(onMessage) {\n        this.streamMessage._value.onMessage = onMessage;\n    }\n    /** get Arraybuffer which is ready to be sent to the microcontroller from message */\n    encodeMessage(message) {\n        const toEncode = new Uint8Array(message.value.serialize());\n        const target = [0, message.id];\n        for (const byte of toEncode) {\n            target.push(byte);\n            if (byte === 0)\n                target.push(0);\n        }\n        target.push(0, 1);\n        return new Uint8Array(target);\n    }\n}\nexports.MessageRegistry = MessageRegistry;\nconst maxMessageDefinitionSize = 10000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toSensorValue = exports.isSensorValueListDTO = exports.isSensorValueDTO = exports.isBasicSensorValueDTOConstrained = exports.isBasicSensorValueDTO = void 0;\nconst SensorValue_1 = require(\"./SensorValue\");\nfunction isAbstractSensorValueDTO(toCheck) {\n    return toCheck.name !== undefined && toCheck.size !== undefined;\n}\nfunction isBasicSensorValueDTO(toCheck) {\n    return isAbstractSensorValueDTO(toCheck) && toCheck.type !== undefined;\n}\nexports.isBasicSensorValueDTO = isBasicSensorValueDTO;\nfunction isBasicSensorValueDTOConstrained(toCheck) {\n    return toCheck.values === undefined;\n}\nexports.isBasicSensorValueDTOConstrained = isBasicSensorValueDTOConstrained;\nfunction isSensorValueDTO(toCheck) {\n    return isBasicSensorValueDTO(toCheck) || !isSensorValueListDTO(toCheck);\n}\nexports.isSensorValueDTO = isSensorValueDTO;\nfunction isSensorValueListDTO(toCheck) {\n    try {\n        if (!isAbstractSensorValueDTO(toCheck))\n            return false;\n        const values = toCheck.values;\n        if (values === undefined)\n            return false;\n        for (const val of values) {\n            if (!isBasicSensorValueDTO(val) || !isSensorValueListDTO(val)) {\n                return false;\n            }\n        }\n    }\n    catch (error) {\n        return false;\n    }\n    return true;\n}\nexports.isSensorValueListDTO = isSensorValueListDTO;\nfunction toSensorValue(dto) {\n    if (isBasicSensorValueDTOConstrained(dto)) {\n        return new SensorValue_1.NumberSensorValue(dto.name, SensorValue_1.getNumberParser(dto.type, dto.size));\n    }\n    else {\n        const sensorValues = dto.values.map(val => toSensorValue(val));\n        return new SensorValue_1.SensorValueList(sensorValues);\n    }\n}\nexports.toSensorValue = toSensorValue;\n","import React from \"react\";\nimport { Component, RefObject } from \"react\";\n\ntype GaugeProps = {\n    value: number,\n    orientation: \"horizontal\" | \"verticalL\" | \"verticalR\"\n    height: number,\n    width: number,\n    className: string | undefined\n}\nexport class Gauge extends Component<GaugeProps, {}>{\n    canvasRef: RefObject<HTMLCanvasElement>\n\n    constructor(props: GaugeProps) {\n        super(props)\n        this.canvasRef = React.createRef<HTMLCanvasElement>()\n    }\n    render() {\n        const mystyle: React.CSSProperties = {\n\n            fontFamily: \"Arial\"\n        };\n        return (\n            <div className={this.props.className}>\n                <canvas height={this.props.height} width={this.props.width} ref={this.canvasRef} style={mystyle} />\n\n            </div>\n        )\n    }\n\n    componentDidMount() {\n\n        this.componentDidUpdate()\n    }\n    componentDidUpdate() {\n\n        switch (this.props.orientation) {\n            case \"horizontal\":\n                this.renderHorizontally();\n                break;\n            case \"verticalL\":\n                this.renderVerticallyL();\n                break;\n            case \"verticalR\":\n                this.renderVerticallyR();\n                break;\n        }\n    }\n    renderHorizontally() {\n\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render gauge here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n        const factor = 5\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n        ctx.translate(-2*factor*(this.props.value-value),0)\n        /**value band */\n        for (let i = (value - 25); i <= (value + 25); i++) {\n            ctx.strokeStyle = \"black\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                let j = i % 360;\n                if (j < 0) { j = j + 360 }\n                let k = (\"000\" + j).slice(-3);\n\n                ctx.strokeText(k, width / 2 + (i - value) * 2 * factor - 14, height * 0.8);\n                ctx.beginPath();\n                ctx.moveTo(width / 2 + (i - value) * 2 * factor, height * 0.1);\n                ctx.lineTo(width / 2 + (i - value) * 2 * factor, height * 0.4);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width / 2 + (i - value) * 2 * factor, height * 0.1);\n                ctx.lineTo(width / 2 + (i - value) * 2 * factor, height * 0.8);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.5 - 25, 3, 50, height * 0.9); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n\n        ctx.rect(width * 0.5 - 25, 3, 50, height * 0.9);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n        let k = (\"000\" + value%360).slice(-3);\n        ctx.strokeText(k, width * 0.5 - 17, height * 0.8);\n\n\n\n    }\n    renderVerticallyL() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render gauge here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n\n        const factor = 10\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n        ctx.translate(0,2*factor*(this.props.value-value))\n        /**value band */\n        for (let i = (value - 10); i <= (value + 10); i++) {\n            ctx.strokeStyle = \"black\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                ctx.strokeText(i.toString(), width * 0.1, height / 2 + 5 - (i - value) * 2 * factor);\n                ctx.beginPath();\n                ctx.moveTo(width * 0.5, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width * 0.6, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.01, height / 2 - 20, width * 0.9, 40); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n        ctx.rect(width * 0.01, height / 2 - 20, width * 0.9, 40);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n        ctx.strokeText(value + \" m/s\", width * 0.1, height / 2 + 10);\n\n\n    }\n    renderVerticallyR() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n\n\n        if (!ctx)\n            return\n        //render gauge horion here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n\n\n        const factor = 5\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n\n        ctx.translate(0,2*factor*(this.props.value-value))\n        /**value band */\n        for (let i = (value - 25); i <= (value + 25); i++) {\n            ctx.strokeStyle = \"black\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                ctx.strokeText(i.toString(), width * 0.1, height / 2 + 5 - (i - value) * 2 * factor);\n                ctx.beginPath();\n                ctx.moveTo(width * 0.6, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width * 0.3, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n\n\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.01, height / 2 - 20, width * 0.99, 40); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n        ctx.rect(width * 0.01, height / 2 - 20, width * 0.99, 40);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n\n        ctx.strokeText(value + \" m\", width * 0.1, height / 2 + 10);\n\n\n    }\n}","import React from \"react\";\nimport { Component, RefObject } from \"react\";\nimport { Gauge } from \"../gauge/Gauge\";\nimport \"./ArtificialHorizon.css\"\ntype ArtificialHorizonProps = {\n    pitch: number,\n    bank: number,\n    height: number,\n    width: number,\n    heading: number,\n    altitude: number,\n    speed: number\n}\nexport class ArtificialHorizon extends Component<ArtificialHorizonProps, {}>{\n    canvasRef: RefObject<HTMLCanvasElement>\n    headingRef: RefObject<Gauge>\n    altitudeRef: RefObject<Gauge>\n    speedRef: RefObject<Gauge>\n    static defaultProps = {\n        height: 500,\n        width: 600\n    }\n    constructor(props: ArtificialHorizonProps) {\n        super(props)\n        this.canvasRef = React.createRef<HTMLCanvasElement>()\n        this.headingRef = React.createRef<Gauge>()\n        this.altitudeRef = React.createRef<Gauge>()\n        this.speedRef = React.createRef<Gauge>()\n    }\n    render() {\n        return (\n            <div className=\"ah-container\" style={{ height: this.props.height, width: this.props.width }}>\n                <canvas className=\"ah-canvas\" ref={this.canvasRef} height={this.props.height} width={this.props.width} />\n                <Gauge className=\"heading-gauge\" ref={this.headingRef} height={this.props.height * 0.08} orientation={\"horizontal\"} width={this.props.width * 0.7} value={this.props.heading} />\n                <Gauge className=\"alt-gauge\" ref={this.altitudeRef} height={this.props.height} orientation={\"verticalR\"} width={this.props.width * 0.12} value={this.props.altitude} />\n                <Gauge className=\"speed-gauge\" ref={this.speedRef} height={this.props.height} orientation={\"verticalL\"} width={this.props.width * 0.13} value={this.props.speed} />\n            </div>\n        )\n    }\n    componentDidMount() {\n        this.componentDidUpdate()\n    }\n    componentDidUpdate() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render artificial horizon here. Access pitch and bank using this.props.pitch.\n\n        const pitch = this.props.pitch\n        const bank = this.props.bank\n        const factor = 8\n        const width = this.props.width\n        const height = this.props.height\n        var fwidth = 2.5 * width\n        var fheight = factor * height\n        //horizon\n        ctx.translate(width / 2, height / 2);\n        ctx.rotate(-bank * Math.PI / 180);\n        ctx.translate(0, factor * pitch);\n        ctx.fillStyle = \"brown\";\n        ctx.fillRect(-fwidth / 2, 0, fwidth, fheight / 2);\n        ctx.fillStyle = \"blue\";\n        ctx.fillRect(-fwidth / 2, -fheight / 2, fwidth, fheight / 2);\n        for (let i = -80; i <= 80; i = i + 10) {\n            ctx.lineWidth = 1;\n            ctx.moveTo(-50, factor * i);\n            ctx.lineTo(50, factor * i);\n            ctx.strokeStyle = \"white\";\n            ctx.stroke();\n        }\n        for (let i = -25; i <= 25; i = i + 10) {\n            ctx.moveTo(-30, factor * i);\n            ctx.lineTo(30, factor * i);\n            ctx.stroke();\n        }\n        for (let i = -17.5; i <= 17.5; i = i + 5) {\n            ctx.moveTo(-15, factor * i);\n            ctx.lineTo(15, factor * i);\n            ctx.stroke();\n        }\n        ctx.font = \"30px Arial\";\n        for (let i = 10; i <= 80; i = i + 10) {\n            ctx.strokeText(i + \"\", -85, -i * factor + 10);\n            ctx.strokeText(i + \"\", 50, -i * factor + 10);\n            ctx.strokeText(i + \"\", -85, i * factor + 10);\n            ctx.strokeText(i + \"\", 50, i * factor + 10);\n\n        }\n\n\n        ctx.translate(0, -factor * pitch);\n        /**scale bank */\n        ctx.rotate(30 * Math.PI / 180);\n        for (let i = -30; i <= 30; i = i + 10) {\n            ctx.beginPath();\n            ctx.moveTo(0, -height / 2.5);\n            ctx.lineTo(0, -height / 2.35);\n            if (i === 0) {\n                ctx.lineTo(0, -height / 2.25);\n            }\n            ctx.stroke();\n            ctx.rotate(-10 * Math.PI / 180);\n        }\n        ctx.rotate(40 * Math.PI / 180);\n\n        ctx.rotate(bank * Math.PI / 180);\n        ctx.translate(-width / 2, -height / 2);\n\n        //circle\n        ctx.beginPath();\n        ctx.arc(width / 2, height / 2, height / 2.5, 0, 2 * Math.PI);\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = \"black\";\n        ctx.stroke();\n        /**triangle marker for bank */\n        ctx.translate(width / 2, height / 2);\n        ctx.beginPath();\n        ctx.moveTo(0, -height / 2.5);\n        ctx.lineTo(-8, -height / 2.3);\n        ctx.lineTo(8, -height / 2.3);\n        ctx.lineTo(0, -height / 2.5);\n        ctx.strokeStyle = \"yellow\";\n        ctx.stroke();\n        ctx.translate(-width / 2, -height / 2);\n\n        ctx.beginPath();\n        ctx.rect(width / 2 - 5, height / 2 - 5, 10, 10);\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = \"yellow\";\n        ctx.stroke();\n        /**aircraft symbol */\n        ctx.beginPath();\n        ctx.moveTo(-height / 2.3 + width / 2, height / 2);\n        ctx.lineTo(-height / 4 + width / 2, height / 2);\n        ctx.lineTo(-height / 4 + width / 2, height / 2 + 5 * factor);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(height / 2.3 + width / 2, height / 2);\n        ctx.lineTo(height / 4 + width / 2, height / 2);\n        ctx.lineTo(height / 4 + width / 2, height / 2 + 5 * factor);\n        ctx.stroke();\n\n    }\n}","import { Grid } from '@material-ui/core'\nimport React from 'react'\nimport \"./Navigation.css\"\n\n\n\ntype NavigationProps = {\n    children: {\n        horizon: React.ReactNode,\n        settings: React.ReactNode\n    }\n}\nexport const Navigation: React.FC<NavigationProps> = (props) => (\n    <div>\n        <Grid container spacing={3} className=\"nav-grid\" >\n            <Grid item style={{ flexGrow: 0 }}>\n                {props.children.horizon}\n            </Grid>\n\n            <Grid item>\n                {props.children.settings}\n            </Grid>\n        </Grid>\n    </div>\n)\n","import { Link, MenuItem, Select, TextField } from \"@material-ui/core\"\nimport React, { useEffect, useRef } from \"react\"\nimport { isReturnStatement } from \"typescript\"\nimport { DataSource, AbstractStreamHook } from \"./Datasource\"\n\nexport class WebSocketDataSource implements DataSource {\n    baseUrl: string = \"\"\n    socket: WebSocket | null = null\n    streamHook: AbstractStreamHook\n    constructor(baseUrl: string = \"http://localhost:9091\") {\n        this.setSocketUrl(baseUrl)\n        this.streamHook = {\n            writeData: data => this.socket?.send(data),\n            onData: null\n        }\n    }\n    matchesStringValue(selectValue: string): boolean {\n        return selectValue === \"websocket-\" + this.baseUrl\n    }\n    getSettings(): React.ReactNode {\n        return <Settings source={this} />\n    }\n    openPort(newPort: PortInfo) {\n        this.socket?.close();\n        this.socket=null;\n        const url = new URL(this.baseUrl + \"/open-port-request?\")\n        url.searchParams.append(\"path\", encodeURI(newPort.path))\n        url.searchParams.append(\"baud\", \"9600\")\n        fetch(url.href).then(res => {\n            res.text().then(text => {\n                if (text === \"success\") {\n                    this.setSocketUrl(this.baseUrl, \"/device\" + newPort.path)\n                }\n            })\n        })\n    }\n    close(): void {\n        this.socket?.close()\n    }\n    setSocketUrl(newUrl: string, socketURLExtension = \"\") {\n        const parsedURL = newUrl.replace(\"http://\", \"ws://\") + socketURLExtension\n        this.socket?.close()\n        try {\n            this.socket = new WebSocket(parsedURL)\n            this.socket.onopen = (ev) => {\n                this.socket?.send(\"Hallo Welt\")\n            }\n            this.socket.onmessage = (ev) => {\n                console.log(ev.data);\n                try {\n                    (ev.data as Blob).arrayBuffer().then((buffer) => {\n                        this.streamHook.onData?.(buffer)\n                    })\n                } catch (error) {\n\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n        this.baseUrl = newUrl\n    }\n    getSelectOption(): React.ReactNode {\n        const id = \"websocket-\" + this.baseUrl\n        return (<MenuItem key={id} value={id}>\n            <p>Websocket <Link>{this.baseUrl}</Link></p>\n        </MenuItem>)\n    }\n    getStreamHook(): AbstractStreamHook {\n        this.streamHook.writeData = data => this.socket?.send(data)\n        return this.streamHook\n    }\n    begin() { }\n}\n\nconst WebsocketPortInfo: React.FC<{ url: string, onChange: (newPort: PortInfo) => void }> = (props) => {\n    const [state, setState] = React.useState<{ ports: PortInfo[], selected: string }>({ ports: [], selected: \"\" })\n    const timerID = useRef(-1)\n    window.clearInterval(timerID.current)\n    const localURL = props.url\n    timerID.current = window.setInterval(async () => {\n        try {\n\n            const deviceJSON = await fetch(localURL + \"/devices\")\n            const ports = await deviceJSON.json()\n            setState({ ports: ports, selected: state.selected })\n        } catch (error) {\n            console.log(error)\n        }\n    }, 1000)\n    useEffect(() => {\n        return () => {\n            console.log(\"Clearing timer \", timerID.current, \"before exit\")\n            window.clearInterval(timerID.current)\n        }\n    }, [])\n    return (\n        <Select value={state.selected} onChange={(event) => {\n            const newPort = state.ports.find(p => p.path === event.target.value)\n            if (newPort)\n                props.onChange(newPort)\n            setState({ ports: state.ports, selected: event.target.value as string })\n        }}>\n            {\n                state.ports.map(port => (\n                    <MenuItem value={port.path}>{port.path} ({port.manufacturer})</MenuItem>\n                ))\n            }\n        </Select >\n    )\n\n}\n\ninterface PortInfo {\n    path: string;\n    manufacturer?: string;\n    serialNumber?: string;\n    pnpId?: string;\n    locationId?: string;\n    productId?: string;\n    vendorId?: string;\n}\n\nconst Settings: React.FC<{ source: WebSocketDataSource }> = (props) => {\n    const [url, setURL] = React.useState<string>(props.source.baseUrl)\n    return (\n        <div>\n            <TextField defaultValue={props.source.baseUrl} onChange={(event) => {\n                props.source.setSocketUrl(event.target.value)\n                setURL(event.target.value)\n            }} />\n            <WebsocketPortInfo url={url} onChange={props.source.openPort.bind(props.source)} />\n        </div>\n    )\n}","import {  MenuItem } from \"@material-ui/core\";\nimport React from \"react\"\nimport { WebSocketDataSource } from \"./WebSocketDatasource\";\nexport class AbstractStreamHook {\n    /**this is called when data arrive on the plane */\n    onData: ((data: ArrayBuffer) => void) | null = null;\n    /** call this to send data to the plane */\n    writeData: (data: ArrayBuffer) => void = data => { };\n}\nexport interface DataSource {\n    getSelectOption(): React.ReactNode\n    getStreamHook(): AbstractStreamHook\n    getSettings(): React.ReactNode\n    close(): void\n    begin(): void\n    matchesStringValue(selectValue: string): boolean\n}\nexport class DemoDataSource implements DataSource {\n    matchesStringValue(selectValue: string) {\n        return selectValue === \"demo\"\n    }\n    hook: AbstractStreamHook = {\n        writeData: data => console.log(data),\n        onData: null\n    }\n    getSettings(): React.ReactNode {\n        return null\n    }\n    getSelectOption(): React.ReactNode {\n        return (<MenuItem key=\"demo\" value=\"demo\">Demo data</MenuItem>)\n    }\n    getStreamHook(): AbstractStreamHook {\n        return this.hook\n    }\n    close() { }\n    begin() {\n        this.hook.onData?.(sampleInputBuffer)\n    }\n}\nconst socketSource = new WebSocketDataSource()\nconst demoSource = new DemoDataSource()\nexport const dataSources = [demoSource, socketSource]\n\n\n\nconst sampleBinaryInput = \"00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 0A 5D 0A 7D 00 01 00 11 00 00 00 00 C0 41 18 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 C8 41 19 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 D0 41 1A 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 D8 41 1B 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 E0 41 1C 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 E8 41 1D 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 F0 41 1E 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 F8 41 1F 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 00 00 42 20 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 04 42 21 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 08 42 22 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 0C 42 23 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 10 42 24 00 00 00 00 00 00 00 01 \"\nconst sampleInputBuffer = new Uint8Array(sampleBinaryInput.split(\" \").map(hexString => parseInt(hexString, 16)))","import { FormControl, FormHelperText, InputLabel, makeStyles, Select } from '@material-ui/core'\nimport { Divider, Paper, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { dataSources } from '../logic/Datasource';\nimport { Logic } from '../logic/logic'\nimport \"./settings.css\"\n// const useStyles = makeStyles((theme) => ({\n//     button: {\n//         display: 'block',\n//         marginTop: theme.spacing(2),\n//     },\n//     formControl: {\n//         margin: theme.spacing(1),\n//         minWidth: 160,\n//     },\n// }));\n\n\ntype SettingsProps = {\n    logic: Logic\n}\nexport const Settings: React.FC<SettingsProps> = (props) => {\n    const [value, selectValue] = React.useState<string>(\"\")\n    //const classes = useStyles()\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        props.logic.currentDataSource?.close()\n        props.logic.currentDataSource = dataSources.find((source) => source.matchesStringValue(event.target.value as string)) || null\n        selectValue(event.target.value as string)\n    }\n    return (\n\n        <Paper className=\"settings-grid-element\">\n            <Typography component=\"h1\">Settings</Typography>\n            <Divider />\n            <FormControl className=\"settings-form\">\n                <InputLabel htmlFor=\"datasource-select\">Data source</InputLabel>\n                <Select id=\"datasource-select\" value={value} onChange={handleChange}>\n                    {dataSources.map(source => source.getSelectOption())}\n                </Select>\n                <FormHelperText>Data source to use</FormHelperText>\n            </FormControl>\n            {props.logic.currentDataSource?.getSettings()}\n        </Paper>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { ArtificialHorizon } from './artificialHorizon/ArtificialHorizon';\nimport { Logic } from './logic/logic';\nimport { Navigation } from './navigation/Navigation';\nimport { Settings } from './settings/Settings';\nclass App extends React.Component<{ logic: Logic }, {}> {\n  constructor(props: { logic: Logic }) {\n    super(props)\n    this.props.logic.onUpdate = () => {\n      this.forceUpdate()\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation>\n          {{\n            horizon: <ArtificialHorizon pitch={this.props.logic.data.pitch} bank={this.props.logic.data.bank} heading={this.props.logic.data.heading} altitude={this.props.logic.data.altitude} speed={this.props.logic.data.speed} />,\n            settings: <Settings logic={this.props.logic}/>\n          }}\n        </Navigation>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Logic } from './logic/logic';\n//const socket = new WebSocket(\"localhost:8081\")\nconst logic = new Logic()\nReactDOM.render(\n  <React.StrictMode>\n    <App logic={logic} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { MessageRegistry } from \"telemetryprotocolclient/dist/index\"\nimport { AbstractStreamHook, DataSource } from \"./Datasource\"\n\n\nexport class Logic {\n    registry: MessageRegistry | null = null\n    onUpdate: () => void\n    data = {\n        pitch: 0,\n        bank: 0,\n        heading: 0,\n        speed: 0,\n        altitude: 0\n    }\n    private _currentDataSource: DataSource | null = null\n    private streamHook: AbstractStreamHook | null = null\n    constructor(onUpdate = () => { }) {\n        this.onUpdate = onUpdate\n    }\n    set currentDataSource(s: DataSource | null) {\n        this._currentDataSource = s\n        this.setStreamHook(s?.getStreamHook() || null)\n        s?.begin()\n    }\n    get currentDataSource() { return this._currentDataSource }\n    private setStreamHook(streamHook: AbstractStreamHook | null) {\n        this.streamHook = streamHook\n        this.registry = new MessageRegistry()\n        if (streamHook)\n            streamHook.onData = (data) => {\n                if (!this.registry)\n                    return\n                this.registry.readData(data)\n                for (const sensVal of this.registry.basicSensorValues || []) {\n                    if (Object.keys(this.data).includes(sensVal.name)) {\n                        (this.data as any)[sensVal.name] = sensVal.value\n                    }\n                }\n                this.onUpdate()\n            }\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SensorValueList = exports.NumberSensorValue = exports.getNumberParser = exports.parsers = exports.SensorValue = void 0;\nclass SensorValue {\n    constructor() {\n        this.name = \"\";\n        this.size = 0;\n        this.replaceBasicSensorValues = (knownSet) => this;\n    }\n}\nexports.SensorValue = SensorValue;\nexports.parsers = {\n    uint8: {\n        name: \"uint8\",\n        size: 1,\n        parse: (raw) => new Uint8Array(raw)[0],\n        serialize: (number) => new Uint8Array([number])\n    },\n    uint16: {\n        name: \"uint16\",\n        size: 2,\n        parse: (raw) => new Uint16Array(raw)[0],\n        serialize: (number) => new Uint16Array([number])\n    },\n    uint32: {\n        name: \"uint32\",\n        size: 4,\n        parse: (raw) => new Uint32Array(raw)[0],\n        serialize: (number) => new Uint32Array([number])\n    },\n    int8: {\n        name: \"int8\",\n        size: 1,\n        parse: (raw) => new Int8Array(raw)[0],\n        serialize: (number) => new Int8Array([number])\n    },\n    int16: {\n        name: \"int16\",\n        size: 2,\n        parse: (raw) => new Int16Array(raw)[0],\n        serialize: (number) => new Int16Array([number])\n    },\n    int32: {\n        name: \"int32\",\n        size: 4,\n        parse: (raw) => new Int32Array(raw)[0],\n        serialize: (number) => new Int32Array([number])\n    },\n    float32: {\n        name: \"float32\",\n        size: 4,\n        parse: (raw) => new Float32Array(raw)[0],\n        serialize: (number) => new Float32Array([number])\n    },\n    float64: {\n        name: \"float64\",\n        size: 4,\n        parse: (raw) => new Float64Array(raw)[0],\n        serialize: (number) => new Float64Array([number])\n    },\n};\n/**\n *\n * @param numberType for example int or float\n * @param size in bytes\n * @returns number parser\n */\nconst getNumberParser = (numberType, size) => {\n    return exports.parsers[numberType + (8 * size)];\n};\nexports.getNumberParser = getNumberParser;\nclass NumberSensorValue extends SensorValue {\n    constructor(name, parser) {\n        super();\n        this.value = 0;\n        this.name = name;\n        this.parser = parser;\n        this.size = parser.size;\n        this.replaceBasicSensorValues = (knownValues) => {\n            const foundValue = knownValues.find(val => val.name == this.name);\n            return foundValue == undefined ? this : foundValue;\n        };\n    }\n    getBasicSensorValues() {\n        return [this];\n    }\n    parse(message) {\n        this.value = this.parser.parse(message);\n        return true;\n    }\n    serialize() {\n        return this.parser.serialize(this.value);\n    }\n}\nexports.NumberSensorValue = NumberSensorValue;\nclass SensorValueList extends SensorValue {\n    constructor(sensorValues) {\n        super();\n        this.sensorValues = sensorValues;\n        this.sensorValues.forEach(val => this.size += val.size);\n        this.replaceBasicSensorValues = (knownSet) => {\n            for (const i in this.sensorValues) {\n                this.sensorValues[i] = this.sensorValues[i].replaceBasicSensorValues(knownSet);\n            }\n            return this;\n        };\n    }\n    getBasicSensorValues() {\n        return this.sensorValues.filter(val => val instanceof NumberSensorValue);\n    }\n    parse(message) {\n        let position = 0;\n        for (let sensorValue of this.sensorValues) {\n            sensorValue.parse(message.slice(position, position + sensorValue.size));\n            position += sensorValue.size;\n        }\n        return position == this.size;\n    }\n    serialize() {\n        const toReturn = new Uint8Array(this.size);\n        let position = 0;\n        for (let sens of this.sensorValues)\n            [\n                toReturn.set(new Uint8Array(sens.serialize()), 0)\n            ];\n        return toReturn;\n    }\n}\nexports.SensorValueList = SensorValueList;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamMessage = exports.Message = void 0;\nconst SensorValue_1 = require(\"./SensorValue\");\nclass Message {\n    constructor(value, id) {\n        if (id <= 1 || id > 255) {\n            throw new Error(\"id not in valid range\");\n        }\n        this.id = id;\n        this.value = value;\n    }\n    parse(toParse) {\n        const messageID = new DataView(toParse).getUint8(0);\n        if (new Uint8Array(toParse).length != this.value.size) {\n            //return false if wrong length\n            return false;\n        }\n        this.value.parse(toParse);\n        return true;\n    }\n}\nexports.Message = Message;\nclass StreamMessageSensorValue extends SensorValue_1.SensorValue {\n    constructor(size = 500, onMessage = (s) => console.log(s)) {\n        super();\n        this.name = \"stream\";\n        this.outputBuffer = [];\n        this.size = size;\n        this.onMessage = onMessage;\n    }\n    getBasicSensorValues() { return []; }\n    parse(m) {\n        this.onMessage(new TextDecoder().decode(m));\n        return true;\n    }\n    serialize() { return new Uint8Array(0); }\n}\nclass StreamMessage extends Message {\n    constructor(onMessage = (s) => console.log(s)) {\n        super(new StreamMessageSensorValue(500, onMessage), 254);\n        this._value = this.value;\n    }\n    append(message) {\n        this._value.outputBuffer.push(message);\n    }\n    /**encode all buffered messages to an Arraybuffer, remove them from the queue and return the buffer */\n    encodeAndFlush() {\n        const encodeString = (s) => {\n            const toEncode = new TextEncoder().encode(s);\n            const target = [0, this.id];\n            for (const byte of toEncode) {\n                target.push(byte);\n                if (byte === 0)\n                    target.push(0);\n            }\n            // Add encoded null byte and end of message bytes\n            target.push(0, 0, 0, 1);\n            return new Uint8Array(target);\n        };\n        const encodedMessages = this._value.outputBuffer.map(s => encodeString(s));\n        this._value.outputBuffer = [];\n        return encodedMessages.reduce((prev, curr) => Uint8Array.from([...prev, ...curr]));\n    }\n}\nexports.StreamMessage = StreamMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberSensorValue = exports.SensorValueList = exports.MessageRegistry = exports.Message = void 0;\nconst Message_1 = require(\"./Message\");\nObject.defineProperty(exports, \"Message\", { enumerable: true, get: function () { return Message_1.Message; } });\nconst MessageRegistry_1 = require(\"./MessageRegistry\");\nObject.defineProperty(exports, \"MessageRegistry\", { enumerable: true, get: function () { return MessageRegistry_1.MessageRegistry; } });\nconst SensorValue_1 = require(\"./SensorValue\");\nObject.defineProperty(exports, \"SensorValueList\", { enumerable: true, get: function () { return SensorValue_1.SensorValueList; } });\nObject.defineProperty(exports, \"NumberSensorValue\", { enumerable: true, get: function () { return SensorValue_1.NumberSensorValue; } });\n"],"sourceRoot":""}