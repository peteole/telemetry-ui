{"version":3,"sources":["../../telemetryProtocolClient/dist/Message.js","../../telemetryProtocolClient/dist/SensorValue.js","../../telemetryProtocolClient/dist/index.js","../../telemetryProtocolClient/dist/MessageRegistry.js","../../telemetryProtocolClient/dist/MessageDTO.js","gauge/Gauge.tsx","artificialHorizon/ArtificialHorizon.tsx","App.tsx","reportWebVitals.ts","logic.ts","index.tsx"],"names":["Object","defineProperty","exports","value","Message","id","Error","this","toParse","DataView","getUint8","Uint8Array","length","size","parse","SensorValueList","NumberSensorValue","getNumberParser","parsers","SensorValue","name","replaceBasicSensorValues","knownSet","uint8","raw","uint16","Uint16Array","uint32","Uint32Array","int8","Int8Array","int16","Int16Array","int32","Int32Array","float32","Float32Array","float64","Float64Array","numberType","parser","knownValues","foundValue","find","val","undefined","message","sensorValues","forEach","i","filter","position","sensorValue","slice","MessageRegistry","Message_1","require","enumerable","get","MessageRegistry_1","SensorValue_1","MessageDTO_1","getMessageDefinitionMessage","registry","messageDefinitionMessage","decoder","TextDecoder","messageID","descriptionString","decode","messageDTO","JSON","isSensorValueDTO","messageSensorValue","toSensorValue","newMessage","basicSensorValues","push","getBasicSensorValues","findIndex","el","oldIndex","messages","m","console","log","basicVal","splice","addMessage","error","maxMessageDefinitionSize","currentMessage","buffer","ArrayBuffer","bufferView","currentPosition","previousByteZero","data","nextValue","index","toAdd","Math","max","map","json","isSensorValueListDTO","isBasicSensorValueDTOConstrained","isBasicSensorValueDTO","isAbstractSensorValueDTO","toCheck","type","values","dto","Gauge","props","canvasRef","React","createRef","className","height","width","ref","style","fontFamily","componentDidUpdate","orientation","renderHorizontally","renderVerticallyL","renderVerticallyR","ctx","current","getContext","round","clearRect","translate","strokeStyle","font","j","k","strokeText","beginPath","moveTo","lineTo","stroke","resetTransform","fillStyle","fillRect","rect","factor","toString","Component","ArtificialHorizon","headingRef","altitudeRef","speedRef","heading","altitude","speed","pitch","bank","fwidth","fheight","rotate","PI","lineWidth","arc","defaultProps","App","logic","onUpdate","forceUpdate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sampleInputBuffer","split","hexString","parseInt","streamHook","onData","readData","sensVal","keys","includes","writeData","ReactDOM","render","StrictMode","document","getElementById","setTimeout"],"mappings":"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","file":"static/js/main.9a44e5af.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Message = void 0;\nclass Message {\n    constructor(value, id) {\n        if (id <= 1 || id > 255) {\n            throw new Error(\"id not in valid range\");\n        }\n        this.id = id;\n        this.value = value;\n    }\n    parse(toParse) {\n        const messageID = new DataView(toParse).getUint8(0);\n        if (new Uint8Array(toParse).length != this.value.size) {\n            //return false if wrong length\n            return false;\n        }\n        this.value.parse(toParse);\n        return true;\n    }\n}\nexports.Message = Message;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SensorValueList = exports.NumberSensorValue = exports.getNumberParser = exports.parsers = exports.SensorValue = void 0;\nclass SensorValue {\n    constructor() {\n        this.name = \"\";\n        this.size = 0;\n        this.replaceBasicSensorValues = (knownSet) => this;\n    }\n}\nexports.SensorValue = SensorValue;\nexports.parsers = {\n    uint8: {\n        name: \"uint8\",\n        size: 1,\n        parse: (raw) => new Uint8Array(raw)[0]\n    },\n    uint16: {\n        name: \"uint16\",\n        size: 2,\n        parse: (raw) => new Uint16Array(raw)[0]\n    },\n    uint32: {\n        name: \"uint32\",\n        size: 4,\n        parse: (raw) => new Uint32Array(raw)[0]\n    },\n    int8: {\n        name: \"int8\",\n        size: 1,\n        parse: (raw) => new Int8Array(raw)[0]\n    },\n    int16: {\n        name: \"int16\",\n        size: 2,\n        parse: (raw) => new Int16Array(raw)[0]\n    },\n    int32: {\n        name: \"int32\",\n        size: 4,\n        parse: (raw) => new Int32Array(raw)[0]\n    },\n    float32: {\n        name: \"float32\",\n        size: 4,\n        parse: (raw) => new Float32Array(raw)[0]\n    },\n    float64: {\n        name: \"float64\",\n        size: 4,\n        parse: (raw) => new Float64Array(raw)[0]\n    },\n};\n/**\n *\n * @param numberType for example int or float\n * @param size in bytes\n * @returns number parser\n */\nconst getNumberParser = (numberType, size) => {\n    return exports.parsers[numberType + (8 * size)];\n};\nexports.getNumberParser = getNumberParser;\nclass NumberSensorValue extends SensorValue {\n    constructor(name, parser) {\n        super();\n        this.value = 0;\n        this.name = name;\n        this.parser = parser;\n        this.size = parser.size;\n        this.replaceBasicSensorValues = (knownValues) => {\n            const foundValue = knownValues.find(val => val.name == this.name);\n            return foundValue == undefined ? this : foundValue;\n        };\n    }\n    getBasicSensorValues() {\n        return [this];\n    }\n    parse(message) {\n        this.value = this.parser.parse(message);\n        return true;\n    }\n}\nexports.NumberSensorValue = NumberSensorValue;\nclass SensorValueList extends SensorValue {\n    constructor(sensorValues) {\n        super();\n        this.sensorValues = sensorValues;\n        this.sensorValues.forEach(val => this.size += val.size);\n        this.replaceBasicSensorValues = (knownSet) => {\n            for (const i in this.sensorValues) {\n                this.sensorValues[i] = this.sensorValues[i].replaceBasicSensorValues(knownSet);\n            }\n            return this;\n        };\n    }\n    getBasicSensorValues() {\n        return this.sensorValues.filter(val => val instanceof NumberSensorValue);\n    }\n    parse(message) {\n        let position = 0;\n        for (let sensorValue of this.sensorValues) {\n            sensorValue.parse(message.slice(position, position + sensorValue.size));\n            position += sensorValue.size;\n        }\n        return position == this.size;\n    }\n}\nexports.SensorValueList = SensorValueList;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberSensorValue = exports.SensorValueList = exports.MessageRegistry = exports.Message = void 0;\nconst Message_1 = require(\"./Message\");\nObject.defineProperty(exports, \"Message\", { enumerable: true, get: function () { return Message_1.Message; } });\nconst MessageRegistry_1 = require(\"./MessageRegistry\");\nObject.defineProperty(exports, \"MessageRegistry\", { enumerable: true, get: function () { return MessageRegistry_1.MessageRegistry; } });\nconst SensorValue_1 = require(\"./SensorValue\");\nObject.defineProperty(exports, \"SensorValueList\", { enumerable: true, get: function () { return SensorValue_1.SensorValueList; } });\nObject.defineProperty(exports, \"NumberSensorValue\", { enumerable: true, get: function () { return SensorValue_1.NumberSensorValue; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageRegistry = void 0;\nconst Message_1 = require(\"./Message\");\nconst MessageDTO_1 = require(\"./MessageDTO\");\nconst getMessageDefinitionMessage = (registry) => {\n    const messageDefinitionMessage = {\n        id: 255,\n        parse: (toParse) => {\n            return messageDefinitionMessage.value.parse(toParse);\n        },\n        value: {\n            name: \"message\",\n            parse: (message) => {\n                const decoder = new TextDecoder(\"utf-8\");\n                const messageID = new Uint8Array(message)[0];\n                const descriptionString = decoder.decode(message.slice(1));\n                try {\n                    const messageDTO = JSON.parse(descriptionString);\n                    if (MessageDTO_1.isSensorValueDTO(messageDTO)) {\n                        const messageSensorValue = MessageDTO_1.toSensorValue(messageDTO);\n                        const newMessage = new Message_1.Message(messageSensorValue, messageID);\n                        newMessage.value = newMessage.value.replaceBasicSensorValues(registry.basicSensorValues);\n                        registry.basicSensorValues.push(...messageSensorValue.getBasicSensorValues().filter(val => registry.basicSensorValues.findIndex(el => el.name === val.name) === -1));\n                        messageDefinitionMessage.value.message = newMessage;\n                        const oldIndex = registry.messages.findIndex(m => m.id == newMessage.id);\n                        if (oldIndex != -1) {\n                            console.log(\"attention, added same message id again!\");\n                            for (const basicVal of registry.messages[oldIndex].value.getBasicSensorValues()) {\n                                registry.basicSensorValues = registry.basicSensorValues.filter(val => val == basicVal);\n                            }\n                            registry.messages.splice(oldIndex, 1);\n                        }\n                        registry.addMessage(newMessage);\n                    }\n                }\n                catch (error) {\n                    return false;\n                }\n                return true;\n            },\n            size: maxMessageDefinitionSize,\n            replaceBasicSensorValues: val => messageDefinitionMessage.value,\n            message: null,\n            getBasicSensorValues: () => []\n        },\n        registry: registry\n    };\n    return messageDefinitionMessage;\n};\nclass MessageRegistry {\n    constructor(messages = []) {\n        this.currentMessage = null;\n        this.buffer = new ArrayBuffer(0);\n        this.bufferView = new Uint8Array(this.buffer);\n        this.currentPosition = 0;\n        this.previousByteZero = false;\n        this.basicSensorValues = [];\n        this.messages = [];\n        messages.push(getMessageDefinitionMessage(this));\n        messages.forEach(m => this.addMessage(m));\n    }\n    readData(data) {\n        for (let nextValue of new Uint8Array(data)) {\n            if (this.currentPosition >= (this.currentMessage !== null ? this.currentMessage.value : 0)) {\n                this.currentPosition = 0;\n            }\n            if (this.previousByteZero) {\n                if (nextValue == 0) {\n                    //zero occured in message\n                    this.bufferView[this.currentPosition] = nextValue;\n                    this.currentPosition++;\n                }\n                else if (nextValue == 1) {\n                    // End of message reached\n                    if (this.currentMessage) {\n                        this.currentMessage.parse(this.buffer.slice(0, this.currentPosition));\n                        this.currentMessage = null;\n                    }\n                }\n                else {\n                    //start of new message\n                    const index = this.messages.findIndex(m => m.id == nextValue);\n                    this.currentMessage = index == -1 ? null : this.messages[index];\n                }\n                this.previousByteZero = false;\n            }\n            else {\n                if (nextValue == 0) {\n                    this.previousByteZero = true;\n                }\n                else {\n                    this.bufferView[this.currentPosition] = nextValue;\n                    this.currentPosition++;\n                }\n            }\n        }\n    }\n    addMessage(toAdd) {\n        this.messages.push(toAdd);\n        this.buffer = new ArrayBuffer(Math.max(...this.messages.map(m => m.value.size)));\n        this.bufferView = new Uint8Array(this.buffer);\n    }\n    static fromJSON(json) {\n    }\n}\nexports.MessageRegistry = MessageRegistry;\nconst maxMessageDefinitionSize = 10000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toSensorValue = exports.isSensorValueListDTO = exports.isSensorValueDTO = exports.isBasicSensorValueDTOConstrained = exports.isBasicSensorValueDTO = void 0;\nconst SensorValue_1 = require(\"./SensorValue\");\nfunction isAbstractSensorValueDTO(toCheck) {\n    return toCheck.name !== undefined && toCheck.size !== undefined;\n}\nfunction isBasicSensorValueDTO(toCheck) {\n    return isAbstractSensorValueDTO(toCheck) && toCheck.type !== undefined;\n}\nexports.isBasicSensorValueDTO = isBasicSensorValueDTO;\nfunction isBasicSensorValueDTOConstrained(toCheck) {\n    return toCheck.values === undefined;\n}\nexports.isBasicSensorValueDTOConstrained = isBasicSensorValueDTOConstrained;\nfunction isSensorValueDTO(toCheck) {\n    return isBasicSensorValueDTO(toCheck) || !isSensorValueListDTO(toCheck);\n}\nexports.isSensorValueDTO = isSensorValueDTO;\nfunction isSensorValueListDTO(toCheck) {\n    try {\n        if (!isAbstractSensorValueDTO(toCheck))\n            return false;\n        const values = toCheck.values;\n        if (values === undefined)\n            return false;\n        for (const val of values) {\n            if (!isBasicSensorValueDTO(val) || !isSensorValueListDTO(val)) {\n                return false;\n            }\n        }\n    }\n    catch (error) {\n        return false;\n    }\n    return true;\n}\nexports.isSensorValueListDTO = isSensorValueListDTO;\nfunction toSensorValue(dto) {\n    if (isBasicSensorValueDTOConstrained(dto)) {\n        return new SensorValue_1.NumberSensorValue(dto.name, SensorValue_1.getNumberParser(dto.type, dto.size));\n    }\n    else {\n        const sensorValues = dto.values.map(val => toSensorValue(val));\n        return new SensorValue_1.SensorValueList(sensorValues);\n    }\n}\nexports.toSensorValue = toSensorValue;\n","import React from \"react\";\nimport { Component, RefObject } from \"react\";\n\ntype GaugeProps = {\n    value: number,\n    orientation: \"horizontal\" | \"verticalL\" | \"verticalR\"\n    height: number,\n    width: number,\n    className: string | undefined\n}\nexport class Gauge extends Component<GaugeProps, {}>{\n    canvasRef: RefObject<HTMLCanvasElement>\n\n    constructor(props: GaugeProps) {\n        super(props)\n        this.canvasRef = React.createRef<HTMLCanvasElement>()\n    }\n    render() {\n        const mystyle: React.CSSProperties = {\n\n            fontFamily: \"Arial\"\n        };\n        return (\n            <div className={this.props.className}>\n                <canvas height={this.props.height} width={this.props.width} ref={this.canvasRef} style={mystyle} />\n\n            </div>\n        )\n    }\n\n    componentDidMount() {\n\n        this.componentDidUpdate()\n    }\n    componentDidUpdate() {\n\n        switch (this.props.orientation) {\n            case \"horizontal\":\n                this.renderHorizontally();\n                break;\n            case \"verticalL\":\n                this.renderVerticallyL();\n                break;\n            case \"verticalR\":\n                this.renderVerticallyR();\n                break;\n        }\n    }\n    renderHorizontally() {\n\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render gauge here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n        const factor = 5\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n        ctx.translate(-2*factor*(this.props.value-value),0)\n        /**value band */\n        for (let i = (value - 25); i <= (value + 25); i++) {\n            ctx.strokeStyle = \"black\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                let j = i % 360;\n                if (j < 0) { j = j + 360 }\n                let k = (\"000\" + j).slice(-3);\n\n                ctx.strokeText(k, width / 2 + (i - value) * 2 * factor - 14, height * 0.8);\n                ctx.beginPath();\n                ctx.moveTo(width / 2 + (i - value) * 2 * factor, height * 0.1);\n                ctx.lineTo(width / 2 + (i - value) * 2 * factor, height * 0.4);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width / 2 + (i - value) * 2 * factor, height * 0.1);\n                ctx.lineTo(width / 2 + (i - value) * 2 * factor, height * 0.8);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.5 - 25, 3, 50, height * 0.9); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n\n        ctx.rect(width * 0.5 - 25, 3, 50, height * 0.9);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n        let k = (\"000\" + value%360).slice(-3);\n        ctx.strokeText(k, width * 0.5 - 17, height * 0.8);\n\n\n\n    }\n    renderVerticallyL() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render gauge here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n\n        const factor = 10\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n        ctx.translate(0,2*factor*(this.props.value-value))\n        /**value band */\n        for (let i = (value - 10); i <= (value + 10); i++) {\n            ctx.strokeStyle = \"black\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                ctx.strokeText(i.toString(), width * 0.1, height / 2 + 5 - (i - value) * 2 * factor);\n                ctx.beginPath();\n                ctx.moveTo(width * 0.5, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width * 0.6, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.01, height / 2 - 20, width * 0.9, 40); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n        ctx.rect(width * 0.01, height / 2 - 20, width * 0.9, 40);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n        ctx.strokeText(value + \" m/s\", width * 0.1, height / 2 + 10);\n\n\n    }\n    renderVerticallyR() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n\n\n        if (!ctx)\n            return\n        //render gauge horion here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n\n\n        const factor = 5\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n\n        ctx.translate(0,2*factor*(this.props.value-value))\n        /**value band */\n        for (let i = (value - 25); i <= (value + 25); i++) {\n            ctx.strokeStyle = \"black\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                ctx.strokeText(i.toString(), width * 0.1, height / 2 + 5 - (i - value) * 2 * factor);\n                ctx.beginPath();\n                ctx.moveTo(width * 0.6, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width * 0.3, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n\n\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.01, height / 2 - 20, width * 0.99, 40); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n        ctx.rect(width * 0.01, height / 2 - 20, width * 0.99, 40);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n\n        ctx.strokeText(value + \" m\", width * 0.1, height / 2 + 10);\n\n\n    }\n}","import React from \"react\";\nimport { Component, RefObject } from \"react\";\nimport { Gauge } from \"../gauge/Gauge\";\nimport \"./ArtificialHorizon.css\"\ntype ArtificialHorizonProps = {\n    pitch: number,\n    bank: number,\n    height: number,\n    width: number,\n    heading: number,\n    altitude: number,\n    speed: number\n}\nexport class ArtificialHorizon extends Component<ArtificialHorizonProps, {}>{\n    canvasRef: RefObject<HTMLCanvasElement>\n    headingRef: RefObject<Gauge>\n    altitudeRef: RefObject<Gauge>\n    speedRef: RefObject<Gauge>\n    static defaultProps = {\n        height: 500,\n        width: 600\n    }\n    constructor(props: ArtificialHorizonProps) {\n        super(props)\n        this.canvasRef = React.createRef<HTMLCanvasElement>()\n        this.headingRef = React.createRef<Gauge>()\n        this.altitudeRef = React.createRef<Gauge>()\n        this.speedRef = React.createRef<Gauge>()\n    }\n    render() {\n        return (\n            <div className=\"ah-container\" style={{ height: this.props.height, width: this.props.width }}>\n                <canvas className=\"ah-canvas\" ref={this.canvasRef} height={this.props.height} width={this.props.width} />\n                <Gauge className=\"heading-gauge\" ref={this.headingRef} height={this.props.height * 0.08} orientation={\"horizontal\"} width={this.props.width * 0.7} value={this.props.heading} />\n                <Gauge className=\"alt-gauge\" ref={this.altitudeRef} height={this.props.height} orientation={\"verticalR\"} width={this.props.width * 0.12} value={this.props.altitude} />\n                <Gauge className=\"speed-gauge\" ref={this.speedRef} height={this.props.height} orientation={\"verticalL\"} width={this.props.width * 0.13} value={this.props.speed} />\n            </div>\n        )\n    }\n    componentDidMount() {\n        this.componentDidUpdate()\n    }\n    componentDidUpdate() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render artificial horizon here. Access pitch and bank using this.props.pitch.\n\n        const pitch = this.props.pitch\n        const bank = this.props.bank\n        const factor = 8\n        const width = this.props.width\n        const height = this.props.height\n        var fwidth = 2.5 * width\n        var fheight = factor * height\n        //horizon\n        ctx.translate(width / 2, height / 2);\n        ctx.rotate(-bank * Math.PI / 180);\n        ctx.translate(0, factor * pitch);\n        ctx.fillStyle = \"brown\";\n        ctx.fillRect(-fwidth / 2, 0, fwidth, fheight / 2);\n        ctx.fillStyle = \"blue\";\n        ctx.fillRect(-fwidth / 2, -fheight / 2, fwidth, fheight / 2);\n        for (let i = -80; i <= 80; i = i + 10) {\n            ctx.lineWidth = 1;\n            ctx.moveTo(-50, factor * i);\n            ctx.lineTo(50, factor * i);\n            ctx.strokeStyle = \"white\";\n            ctx.stroke();\n        }\n        for (let i = -25; i <= 25; i = i + 10) {\n            ctx.moveTo(-30, factor * i);\n            ctx.lineTo(30, factor * i);\n            ctx.stroke();\n        }\n        for (let i = -17.5; i <= 17.5; i = i + 5) {\n            ctx.moveTo(-15, factor * i);\n            ctx.lineTo(15, factor * i);\n            ctx.stroke();\n        }\n        ctx.font = \"30px Arial\";\n        for (let i = 10; i <= 80; i = i + 10) {\n            ctx.strokeText(i + \"\", -85, -i * factor + 10);\n            ctx.strokeText(i + \"\", 50, -i * factor + 10);\n            ctx.strokeText(i + \"\", -85, i * factor + 10);\n            ctx.strokeText(i + \"\", 50, i * factor + 10);\n\n        }\n\n\n        ctx.translate(0, -factor * pitch);\n        /**scale bank */\n        ctx.rotate(30 * Math.PI / 180);\n        for (let i = -30; i <= 30; i = i + 10) {\n            ctx.beginPath();\n            ctx.moveTo(0, -height / 2.5);\n            ctx.lineTo(0, -height / 2.35);\n            if (i === 0) {\n                ctx.lineTo(0, -height / 2.25);\n            }\n            ctx.stroke();\n            ctx.rotate(-10 * Math.PI / 180);\n        }\n        ctx.rotate(40 * Math.PI / 180);\n\n        ctx.rotate(bank * Math.PI / 180);\n        ctx.translate(-width / 2, -height / 2);\n\n        //circle\n        ctx.beginPath();\n        ctx.arc(width / 2, height / 2, height / 2.5, 0, 2 * Math.PI);\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = \"black\";\n        ctx.stroke();\n        /**triangle marker for bank */\n        ctx.translate(width / 2, height / 2);\n        ctx.beginPath();\n        ctx.moveTo(0, -height / 2.5);\n        ctx.lineTo(-8, -height / 2.3);\n        ctx.lineTo(8, -height / 2.3);\n        ctx.lineTo(0, -height / 2.5);\n        ctx.strokeStyle = \"yellow\";\n        ctx.stroke();\n        ctx.translate(-width / 2, -height / 2);\n\n        ctx.beginPath();\n        ctx.rect(width / 2 - 5, height / 2 - 5, 10, 10);\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = \"yellow\";\n        ctx.stroke();\n        /**aircraft symbol */\n        ctx.beginPath();\n        ctx.moveTo(-height / 2.3 + width / 2, height / 2);\n        ctx.lineTo(-height / 4 + width / 2, height / 2);\n        ctx.lineTo(-height / 4 + width / 2, height / 2 + 5 * factor);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(height / 2.3 + width / 2, height / 2);\n        ctx.lineTo(height / 4 + width / 2, height / 2);\n        ctx.lineTo(height / 4 + width / 2, height / 2 + 5 * factor);\n        ctx.stroke();\n\n    }\n}","import React from 'react';\nimport './App.css';\nimport { ArtificialHorizon } from './artificialHorizon/ArtificialHorizon';\nimport { Logic } from './logic';\nclass App extends React.Component<{ logic: Logic }, {}> {\n  constructor(props: { logic: Logic }) {\n    super(props)\n    this.props.logic.onUpdate = () => {\n      this.forceUpdate()\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <ArtificialHorizon pitch={this.props.logic.data.pitch} bank={this.props.logic.data.bank} heading={this.props.logic.data.heading} altitude={this.props.logic.data.altitude} speed={this.props.logic.data.speed} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { MessageRegistry } from \"telemetryprotocolclient/dist/index\"\n\nclass AbstractStreamHook {\n    onData: ((data: ArrayBuffer) => void) | null = null;\n    writeData: (data: ArrayBuffer) => void = data => { };\n}\nexport class Logic {\n    registry: MessageRegistry\n    onUpdate: () => void\n    data = {\n        pitch: 0,\n        bank: 0,\n        heading: 0,\n        speed: 0,\n        altitude: 0\n    }\n    readonly streamHook: AbstractStreamHook\n    constructor(streamHook: AbstractStreamHook, onUpdate = () => { }) {\n        this.streamHook = streamHook\n        this.registry = new MessageRegistry()\n        this.onUpdate = onUpdate\n        streamHook.onData = (data) => {\n            this.registry.readData(data)\n            for (const sensVal of this.registry.basicSensorValues) {\n                if (Object.keys(this.data).includes(sensVal.name)) {\n                    (this.data as any)[sensVal.name] = sensVal.value\n                }\n            }\n            this.onUpdate()\n        }\n    }\n}\n\nconst sampleBinaryInput = \"00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 0A 5D 0A 7D 00 01 00 11 00 00 00 00 C0 41 18 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 C8 41 19 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 D0 41 1A 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 D8 41 1B 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 E0 41 1C 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 E8 41 1D 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 F0 41 1E 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 F8 41 1F 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 00 00 42 20 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 04 42 21 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 08 42 22 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 0C 42 23 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 10 42 24 00 00 00 00 00 00 00 01 \"\nexport const sampleInputBuffer = new Uint8Array(sampleBinaryInput.split(\" \").map(hexString => parseInt(hexString, 16)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Logic, sampleInputBuffer } from './logic';\n//const socket = new WebSocket(\"localhost:8081\")\nconst logic = new Logic({\n  writeData: data => {},//socket.send(data),\n  onData: null\n})\nReactDOM.render(\n  <React.StrictMode>\n    <App logic={logic} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nsetTimeout(() => {\n  if (logic.streamHook.onData)\n    logic.streamHook.onData(sampleInputBuffer)\n}, 1000)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}