{"version":3,"sources":["../../telemetryProtocolClient/dist/MessageRegistry.js","../../telemetryProtocolClient/dist/MessageDTO.js","gauge/Gauge.tsx","artificialHorizon/ArtificialHorizon.tsx","map/RouteMap.tsx","navigation/Navigation.tsx","logic/WebSocketDatasource.tsx","logic/Datasource.tsx","settings/Settings.tsx","terminal/Terminal.tsx","App.tsx","reportWebVitals.ts","logic/logic.ts","index.tsx","../../telemetryProtocolClient/dist/SensorValue.js","../../telemetryProtocolClient/dist/Message.js","../../telemetryProtocolClient/dist/index.js"],"names":["Object","defineProperty","exports","value","MessageRegistry","Message_1","require","MessageDTO_1","getMessageDefinitionMessage","registry","messageDefinitionMessage","id","parse","toParse","name","message","decoder","TextDecoder","messageID","Uint8Array","descriptionString","decode","slice","messageDTO","JSON","isSensorValueDTO","messageSensorValue","toSensorValue","newMessage","Message","replaceBasicSensorValues","basicSensorValues","newBasicSensorVals","getBasicSensorValues","filter","val","findIndex","el","push","oldIndex","messages","m","console","log","splice","addMessage","error","serialize","size","maxMessageDefinitionSize","onMessage","s","this","currentMessage","buffer","ArrayBuffer","bufferView","currentPosition","previousByteZero","onUnknownMessage","streamMessage","StreamMessage","forEach","data","_a","nextValue","index","call","toAdd","Math","max","map","_value","toEncode","target","byte","isSensorValueListDTO","isBasicSensorValueDTOConstrained","isBasicSensorValueDTO","SensorValue_1","isAbstractSensorValueDTO","toCheck","undefined","type","values","dto","NumberSensorValue","getNumberParser","sensorValues","SensorValueList","Gauge","props","canvasRef","React","createRef","className","height","width","ref","style","fontFamily","componentDidUpdate","orientation","renderHorizontally","renderVerticallyL","renderVerticallyR","ctx","current","getContext","round","clearRect","translate","i","strokeStyle","font","j","k","strokeText","beginPath","moveTo","lineTo","stroke","resetTransform","fillStyle","fillRect","rect","factor","toString","Component","ArtificialHorizon","headingRef","altitudeRef","speedRef","heading","PI","altitude","speed","pitchDeg","pitch","bankDeg","bank","fwidth","fheight","rotate","lineWidth","arc","defaultProps","RouteMap","route","isPlausible","center","length","MapContainer","zoom","scrollWheelZoom","TileLayer","attribution","url","Polyline","positions","pos","isFinite","isNaN","Navigation","Grid","container","spacing","item","flexGrow","children","horizon","settings","terminal","WebSocketDataSource","baseUrl","socket","streamHook","setSocketUrl","writeData","send","onData","selectValue","source","newPort","close","URL","searchParams","append","encodeURI","path","fetch","href","then","res","text","newUrl","socketURLExtension","parsedURL","replace","WebSocket","onopen","ev","onmessage","arrayBuffer","MenuItem","Link","WebsocketPortInfo","useState","ports","selected","state","setState","timerID","useRef","window","clearInterval","localURL","setInterval","a","deviceJSON","json","useEffect","Select","onChange","event","find","p","port","manufacturer","Settings","setURL","TextField","defaultValue","openPort","bind","DemoDataSource","hook","sampleInputBuffer","socketSource","dataSources","split","hexString","parseInt","Paper","Typography","component","Divider","FormControl","InputLabel","htmlFor","logic","currentDataSource","matchesStringValue","getSelectOption","FormHelperText","getSettings","Terminal","lines","setLines","input","inputRef","line","onKeyPress","key","sendMessage","App","onUpdate","forceUpdate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Logic","_currentDataSource","setStreamHook","getStreamHook","begin","lat","lon","readData","sensVal","keys","includes","encodeAndFlush","toSend","encodeMessage","ReactDOM","render","StrictMode","document","getElementById","parsers","SensorValue","knownSet","uint8","raw","number","uint16","Uint16Array","uint32","Uint32Array","int8","Int8Array","int16","Int16Array","int32","Int32Array","float32","Float32Array","float64","Float64Array","numberType","parser","knownValues","foundValue","position","sensorValue","toReturn","sens","set","Error","_b","StreamMessageSensorValue","outputBuffer","byteLength","encodedMessages","TextEncoder","encode","encodeString","reduce","prev","curr","from","enumerable","get","MessageRegistry_1"],"mappings":"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","file":"static/js/main.139c6fe9.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageRegistry = void 0;\nconst Message_1 = require(\"./Message\");\nconst MessageDTO_1 = require(\"./MessageDTO\");\nconst getMessageDefinitionMessage = (registry) => {\n    const messageDefinitionMessage = {\n        id: 255,\n        parse: (toParse) => {\n            return messageDefinitionMessage.value.parse(toParse);\n        },\n        value: {\n            name: \"message\",\n            parse: (message) => {\n                const decoder = new TextDecoder(\"utf-8\");\n                const messageID = new Uint8Array(message)[0];\n                const descriptionString = decoder.decode(message.slice(1));\n                try {\n                    const messageDTO = JSON.parse(descriptionString);\n                    if (MessageDTO_1.isSensorValueDTO(messageDTO)) {\n                        const messageSensorValue = MessageDTO_1.toSensorValue(messageDTO);\n                        const newMessage = new Message_1.Message(messageSensorValue, messageID);\n                        newMessage.value = newMessage.value.replaceBasicSensorValues(registry.basicSensorValues);\n                        //push new basic sensor values dominantly\n                        const newBasicSensorVals = messageSensorValue.getBasicSensorValues();\n                        registry.basicSensorValues = registry.basicSensorValues.filter(val => newBasicSensorVals.findIndex(el => el.name === val.name) === -1);\n                        registry.basicSensorValues.push(...newBasicSensorVals);\n                        messageDefinitionMessage.value.message = newMessage;\n                        // remove old message with same id if it exists\n                        const oldIndex = registry.messages.findIndex(m => m.id == newMessage.id);\n                        if (oldIndex != -1) {\n                            console.log(\"attention, added same message id again!\");\n                            registry.messages.splice(oldIndex, 1);\n                        }\n                        registry.addMessage(newMessage);\n                    }\n                }\n                catch (error) {\n                    return false;\n                }\n                return true;\n            },\n            serialize: () => {\n                // this tells the sender to resend all message definitions. There does not need to be any content in this message.\n                return new Uint8Array([]);\n            },\n            size: maxMessageDefinitionSize,\n            replaceBasicSensorValues: val => messageDefinitionMessage.value,\n            message: null,\n            getBasicSensorValues: () => []\n        },\n        registry: registry\n    };\n    return messageDefinitionMessage;\n};\nclass MessageRegistry {\n    constructor(messages = [], onMessage = (s) => console.log(s)) {\n        this.currentMessage = null;\n        this.buffer = new ArrayBuffer(0);\n        this.bufferView = new Uint8Array(this.buffer);\n        this.currentPosition = 0;\n        this.previousByteZero = false;\n        /**called when an unknown message is recieved. May be used to request the data schema in this case. */\n        this.onUnknownMessage = null;\n        this.basicSensorValues = [];\n        this.messages = [];\n        this.messageDefinitionMessage = getMessageDefinitionMessage(this);\n        messages.push(this.messageDefinitionMessage);\n        this.streamMessage = new Message_1.StreamMessage(onMessage);\n        messages.push(this.streamMessage);\n        messages.forEach(m => this.addMessage(m));\n    }\n    readData(data) {\n        var _a;\n        for (let nextValue of new Uint8Array(data)) {\n            if (this.currentPosition >= (this.currentMessage !== null ? this.currentMessage.value : 0)) {\n                this.currentPosition = 0;\n            }\n            if (this.previousByteZero) {\n                if (nextValue == 0) {\n                    //zero occured in message\n                    this.bufferView[this.currentPosition] = nextValue;\n                    this.currentPosition++;\n                }\n                else if (nextValue == 1) {\n                    // End of message reached\n                    if (this.currentMessage) {\n                        this.currentMessage.parse(this.buffer.slice(0, this.currentPosition));\n                        this.currentMessage = null;\n                    }\n                }\n                else {\n                    //start of new message\n                    const index = this.messages.findIndex(m => m.id == nextValue);\n                    if (index == -1) {\n                        this.currentMessage = null;\n                        (_a = this.onUnknownMessage) === null || _a === void 0 ? void 0 : _a.call(this);\n                    }\n                    else {\n                        this.currentMessage = this.messages[index];\n                    }\n                }\n                this.previousByteZero = false;\n            }\n            else {\n                if (nextValue == 0) {\n                    this.previousByteZero = true;\n                }\n                else {\n                    this.bufferView[this.currentPosition] = nextValue;\n                    this.currentPosition++;\n                }\n            }\n        }\n    }\n    addMessage(toAdd) {\n        this.messages.push(toAdd);\n        this.buffer = new ArrayBuffer(Math.max(...this.messages.map(m => m.value.size)));\n        this.bufferView = new Uint8Array(this.buffer);\n    }\n    set onMessage(onMessage) {\n        this.streamMessage._value.onMessage = onMessage;\n    }\n    /** get Arraybuffer which is ready to be sent to the microcontroller from message */\n    encodeMessage(message) {\n        const toEncode = new Uint8Array(message.value.serialize());\n        const target = [0, message.id];\n        for (const byte of toEncode) {\n            target.push(byte);\n            if (byte === 0)\n                target.push(0);\n        }\n        target.push(0, 1);\n        return new Uint8Array(target);\n    }\n}\nexports.MessageRegistry = MessageRegistry;\nconst maxMessageDefinitionSize = 10000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toSensorValue = exports.isSensorValueListDTO = exports.isSensorValueDTO = exports.isBasicSensorValueDTOConstrained = exports.isBasicSensorValueDTO = void 0;\nconst SensorValue_1 = require(\"./SensorValue\");\nfunction isAbstractSensorValueDTO(toCheck) {\n    return toCheck.name !== undefined && toCheck.size !== undefined;\n}\nfunction isBasicSensorValueDTO(toCheck) {\n    return isAbstractSensorValueDTO(toCheck) && toCheck.type !== undefined;\n}\nexports.isBasicSensorValueDTO = isBasicSensorValueDTO;\nfunction isBasicSensorValueDTOConstrained(toCheck) {\n    return toCheck.values === undefined;\n}\nexports.isBasicSensorValueDTOConstrained = isBasicSensorValueDTOConstrained;\nfunction isSensorValueDTO(toCheck) {\n    return isBasicSensorValueDTO(toCheck) || !isSensorValueListDTO(toCheck);\n}\nexports.isSensorValueDTO = isSensorValueDTO;\nfunction isSensorValueListDTO(toCheck) {\n    try {\n        if (!isAbstractSensorValueDTO(toCheck))\n            return false;\n        const values = toCheck.values;\n        if (values === undefined)\n            return false;\n        for (const val of values) {\n            if (!isBasicSensorValueDTO(val) || !isSensorValueListDTO(val)) {\n                return false;\n            }\n        }\n    }\n    catch (error) {\n        return false;\n    }\n    return true;\n}\nexports.isSensorValueListDTO = isSensorValueListDTO;\nfunction toSensorValue(dto) {\n    if (isBasicSensorValueDTOConstrained(dto)) {\n        return new SensorValue_1.NumberSensorValue(dto.name, SensorValue_1.getNumberParser(dto.type, dto.size));\n    }\n    else {\n        const sensorValues = dto.values.map(val => toSensorValue(val));\n        return new SensorValue_1.SensorValueList(sensorValues);\n    }\n}\nexports.toSensorValue = toSensorValue;\n","import React from \"react\";\nimport { Component, RefObject } from \"react\";\n\ntype GaugeProps = {\n    value: number,\n    orientation: \"horizontal\" | \"verticalL\" | \"verticalR\"\n    height: number,\n    width: number,\n    className: string | undefined\n}\nexport class Gauge extends Component<GaugeProps, {}>{\n    canvasRef: RefObject<HTMLCanvasElement>\n\n    constructor(props: GaugeProps) {\n        super(props)\n        this.canvasRef = React.createRef<HTMLCanvasElement>()\n    }\n    render() {\n        const mystyle: React.CSSProperties = {\n\n            fontFamily: \"Arial\"\n        };\n        return (\n            <div className={this.props.className}>\n                <canvas height={this.props.height} width={this.props.width} ref={this.canvasRef} style={mystyle} />\n\n            </div>\n        )\n    }\n\n    componentDidMount() {\n\n        this.componentDidUpdate()\n    }\n    componentDidUpdate() {\n\n        switch (this.props.orientation) {\n            case \"horizontal\":\n                this.renderHorizontally();\n                break;\n            case \"verticalL\":\n                this.renderVerticallyL();\n                break;\n            case \"verticalR\":\n                this.renderVerticallyR();\n                break;\n        }\n    }\n    renderHorizontally() {\n\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render gauge here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n        const factor = 5\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n        ctx.translate(-2*factor*(this.props.value-value),0)\n        /**value band */\n        for (let i = (value - 25); i <= (value + 25); i++) {\n            ctx.strokeStyle = \"white\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                let j = i % 360;\n                if (j < 0) { j = j + 360 }\n                let k = (\"000\" + j).slice(-3);\n\n                ctx.strokeText(k, width / 2 + (i - value) * 2 * factor - 14, height * 0.8);\n                ctx.beginPath();\n                ctx.moveTo(width / 2 + (i - value) * 2 * factor, height * 0.1);\n                ctx.lineTo(width / 2 + (i - value) * 2 * factor, height * 0.4);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width / 2 + (i - value) * 2 * factor, height * 0.1);\n                ctx.lineTo(width / 2 + (i - value) * 2 * factor, height * 0.8);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.5 - 25, 3, 50, height * 0.9); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n\n        ctx.rect(width * 0.5 - 25, 3, 50, height * 0.9);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n        let k = (\"000\" + value%360).slice(-3);\n        ctx.strokeText(k+\"°\", width * 0.5 - 17, height * 0.8);\n\n\n\n    }\n    renderVerticallyL() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render gauge here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n\n        const factor = 10\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n        ctx.translate(0,2*factor*(this.props.value-value))\n        /**value band */\n        for (let i = (value - 10); i <= (value + 10); i++) {\n            ctx.strokeStyle = \"white\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                ctx.strokeText(i.toString(), width * 0.1, height / 2 + 5 - (i - value) * 2 * factor);\n                ctx.beginPath();\n                ctx.moveTo(width * 0.5, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width * 0.6, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.01, height / 2 - 20, width * 0.9, 40); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n        ctx.rect(width * 0.01, height / 2 - 20, width * 0.9, 40);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n        ctx.strokeText(value + \" m/s\", width * 0.1, height / 2 + 10);\n\n\n    }\n    renderVerticallyR() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n\n\n        if (!ctx)\n            return\n        //render gauge horion here. Access value using this.props.value.\n        const value = Math.round(this.props.value)\n\n\n        const factor = 5\n        const width = this.props.width\n        const height = this.props.height\n        ctx?.clearRect(0,0,width, height)\n\n        ctx.translate(0,2*factor*(this.props.value-value))\n        /**value band */\n        for (let i = (value - 25); i <= (value + 25); i++) {\n            ctx.strokeStyle = \"white\";\n\n            if (i % 10 === 0) {\n                ctx.font = \"15px Arial\";\n                ctx.strokeText(i.toString(), width * 0.1, height / 2 + 5 - (i - value) * 2 * factor);\n                ctx.beginPath();\n                ctx.moveTo(width * 0.6, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n            else if (i % 5 === 0) {\n                ctx.beginPath();\n                ctx.moveTo(width * 0.3, height / 2 - (i - value) * 2 * factor);\n                ctx.lineTo(width * 0.9, height / 2 - (i - value) * 2 * factor);\n                ctx.stroke();\n            }\n        }\n        ctx.resetTransform()\n\n\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(width * 0.01, height / 2 - 20, width * 0.99, 40); //Value on PFD\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n        ctx.rect(width * 0.01, height / 2 - 20, width * 0.99, 40);\n        ctx.stroke();\n        ctx.font = \"20px Arial\";\n\n        ctx.strokeText(value + \" m\", width * 0.1, height / 2 + 10);\n\n\n    }\n}","import React from \"react\";\nimport { Component, RefObject } from \"react\";\nimport { Gauge } from \"../gauge/Gauge\";\nimport \"./ArtificialHorizon.css\"\n/**All angles in radians!!! */\ntype ArtificialHorizonProps = {\n    pitch: number,\n    bank: number,\n    height: number,\n    width: number,\n    heading: number,\n    altitude: number,\n    speed: number\n}\nexport class ArtificialHorizon extends Component<ArtificialHorizonProps, {}>{\n    canvasRef: RefObject<HTMLCanvasElement>\n    headingRef: RefObject<Gauge>\n    altitudeRef: RefObject<Gauge>\n    speedRef: RefObject<Gauge>\n    static defaultProps = {\n        height: 500,\n        width: 600\n    }\n    constructor(props: ArtificialHorizonProps) {\n        super(props)\n        this.canvasRef = React.createRef<HTMLCanvasElement>()\n        this.headingRef = React.createRef<Gauge>()\n        this.altitudeRef = React.createRef<Gauge>()\n        this.speedRef = React.createRef<Gauge>()\n    }\n    render() {\n        return (\n            <div className=\"ah-container\" style={{ height: this.props.height, width: this.props.width }}>\n                <canvas className=\"ah-canvas\" ref={this.canvasRef} height={this.props.height} width={this.props.width} />\n                <Gauge className=\"heading-gauge\" ref={this.headingRef} height={this.props.height * 0.08} orientation={\"horizontal\"} width={this.props.width * 0.7} value={(this.props.heading * 180 / Math.PI + 720) % 360} />\n                <Gauge className=\"alt-gauge\" ref={this.altitudeRef} height={this.props.height} orientation={\"verticalR\"} width={this.props.width * 0.12} value={this.props.altitude} />\n                <Gauge className=\"speed-gauge\" ref={this.speedRef} height={this.props.height} orientation={\"verticalL\"} width={this.props.width * 0.13} value={this.props.speed} />\n            </div>\n        )\n    }\n    componentDidMount() {\n        this.componentDidUpdate()\n    }\n    componentDidUpdate() {\n        const ctx = this.canvasRef.current?.getContext(\"2d\")\n\n        if (!ctx)\n            return\n        //render artificial horizon here. Access pitch and bank using this.props.pitch.\n\n        const pitchDeg = this.props.pitch * 180 / Math.PI\n        const bankDeg = this.props.bank * 180 / Math.PI\n        const factor = 8\n        const width = this.props.width\n        const height = this.props.height\n        var fwidth = 2.5 * width\n        var fheight = factor * height\n        \n        //horizon\n        ctx.translate(width / 2, height / 2);\n        ctx.rotate(-bankDeg * Math.PI / 180);\n        ctx.translate(0, factor * pitchDeg);\n        ctx.fillStyle = \"brown\";\n        ctx.fillRect(-fwidth / 2, 0, fwidth, fheight / 2);\n        ctx.fillStyle = \"blue\";\n        ctx.fillRect(-fwidth / 2, -fheight / 2, fwidth, fheight / 2);\n        for (let i = -80; i <= 80; i = i + 10) {\n            ctx.lineWidth = 1;\n            ctx.moveTo(-50, factor * i);\n            ctx.lineTo(50, factor * i);\n            ctx.strokeStyle = \"white\";\n            ctx.stroke();\n        }\n        for (let i = -25; i <= 25; i = i + 10) {\n            ctx.moveTo(-30, factor * i);\n            ctx.lineTo(30, factor * i);\n            ctx.stroke();\n        }\n        for (let i = -17.5; i <= 17.5; i = i + 5) {\n            ctx.moveTo(-15, factor * i);\n            ctx.lineTo(15, factor * i);\n            ctx.stroke();\n        }\n        ctx.font = \"30px Arial\";\n        for (let i = 10; i <= 80; i = i + 10) {\n            ctx.strokeText(i + \"\", -85, -i * factor + 10);\n            ctx.strokeText(i + \"\", 50, -i * factor + 10);\n            ctx.strokeText(i + \"\", -85, i * factor + 10);\n            ctx.strokeText(i + \"\", 50, i * factor + 10);\n\n        }\n\n\n        ctx.translate(0, -factor * pitchDeg);\n        /**triangle marker for bank */\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(0, -height / 2.5);\n        ctx.lineTo(-8, -height / 2.7);\n        ctx.lineTo(8, -height / 2.7);\n        ctx.lineTo(0, -height / 2.5);\n        ctx.strokeStyle = \"yellow\";\n        ctx.stroke();\n        \n        \n        ctx.rotate(this.props.bank);\n        ctx.translate(-width / 2, -height / 2);\n\n        //Elements are fixed from here\n        //circle\n        ctx.beginPath();\n        ctx.arc(width / 2, height / 2, height / 2.5, 0, 2 * Math.PI);\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = \"black\";\n        ctx.stroke();\n        \n        /**scale bank */\n        ctx.translate(width / 2, height / 2);\n        ctx.rotate(30 * Math.PI / 180);\n        for (let i = -30; i <= 30; i = i + 10) {\n            ctx.beginPath();\n            ctx.moveTo(0, -height / 2.5);\n            ctx.lineTo(0, -height / 2.35);\n            if (i === 0) {\n                ctx.lineTo(0, -height / 2.25);\n            }\n            ctx.stroke();\n            ctx.rotate(-10 * Math.PI / 180);\n        }\n        ctx.rotate(40 * Math.PI / 180);\n        ctx.translate(-width / 2, -height / 2);\n\n\n        \n\n        /**aircraft symbol */\n        ctx.beginPath();\n        ctx.rect(width / 2 - 5, height / 2 - 5, 10, 10);\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = \"yellow\";\n        ctx.stroke();\n        \n        ctx.beginPath();\n        ctx.moveTo(-height / 2.3 + width / 2, height / 2);\n        ctx.lineTo(-height / 4 + width / 2, height / 2);\n        ctx.lineTo(-height / 4 + width / 2, height / 2 + 5 * factor);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(height / 2.3 + width / 2, height / 2);\n        ctx.lineTo(height / 4 + width / 2, height / 2);\n        ctx.lineTo(height / 4 + width / 2, height / 2 + 5 * factor);\n        ctx.stroke();\n\n    }\n}","import { FC } from \"react\";\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet'\nexport type mapProps = {\n    route: [number, number][];\n}\nexport const RouteMap: FC<mapProps> = props => {\n    props.route = props.route.filter(el => isPlausible(el[0]) && isPlausible(el[1]));\n    const center: [number, number] = (props.route.length > 0) ? props.route[0] : [51.505, -0.09];\n    return (\n        <div style={{ height: \"400px\" }}>\n            <MapContainer style={{ height: \"50vh\", width: \"90vw\" }} center={center} zoom={13} scrollWheelZoom={true} >\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                <Polyline positions={props.route} />\n            </MapContainer>\n        </div>\n    )\n}\nconst isPlausible = (pos: number) => {\n    return isFinite(pos) && !isNaN(pos) && pos !== 0\n}","import { Grid } from '@material-ui/core'\nimport React from 'react'\nimport \"./Navigation.css\"\n\n\n\ntype NavigationProps = {\n    children: {\n        horizon: React.ReactNode,\n        settings: React.ReactNode,\n        terminal: React.ReactNode,\n        map:React.ReactNode\n    }\n}\nexport const Navigation: React.FC<NavigationProps> = (props) => (\n    <div>\n        <Grid container spacing={3} className=\"nav-grid\" >\n            <Grid item style={{ flexGrow: 0 }}>\n                {props.children.horizon}\n            </Grid>\n\n            <Grid item>\n                {props.children.settings}\n            </Grid>\n\n            <Grid item>\n                {props.children.terminal}\n            </Grid>\n\n            <Grid item>\n                {props.children.map}\n            </Grid>\n        </Grid>\n    </div>\n)\n","import { Link, MenuItem, Select, TextField } from \"@material-ui/core\"\nimport React, { useEffect, useRef } from \"react\"\nimport { isReturnStatement } from \"typescript\"\nimport { DataSource, AbstractStreamHook } from \"./Datasource\"\n\nexport class WebSocketDataSource implements DataSource {\n    baseUrl: string = \"\"\n    socket: WebSocket | null = null\n    streamHook: AbstractStreamHook\n    constructor(baseUrl: string = \"http://localhost:9091\") {\n        this.setSocketUrl(baseUrl)\n        this.streamHook = {\n            writeData: data => this.socket?.send(data),\n            onData: null\n        }\n    }\n    matchesStringValue(selectValue: string): boolean {\n        return selectValue === \"websocket-\" + this.baseUrl\n    }\n    getSettings(): React.ReactNode {\n        return <Settings source={this} />\n    }\n    openPort(newPort: PortInfo) {\n        this.socket?.close();\n        this.socket=null;\n        const url = new URL(this.baseUrl + \"/open-port-request?\")\n        url.searchParams.append(\"path\", encodeURI(newPort.path))\n        url.searchParams.append(\"baud\", \"9600\")\n        fetch(url.href).then(res => {\n            res.text().then(text => {\n                if (text === \"success\") {\n                    this.setSocketUrl(this.baseUrl, \"/device\" + newPort.path)\n                }\n            })\n        })\n    }\n    close(): void {\n        this.socket?.close()\n    }\n    setSocketUrl(newUrl: string, socketURLExtension = \"\") {\n        const parsedURL = newUrl.replace(\"http://\", \"ws://\") + socketURLExtension\n        this.socket?.close()\n        try {\n            this.socket = new WebSocket(parsedURL)\n            this.socket.onopen = (ev) => {\n                this.socket?.send(\"Hallo Welt\")\n            }\n            this.socket.onmessage = (ev) => {\n                try {\n                    (ev.data as Blob).arrayBuffer().then((buffer) => {\n                        this.streamHook.onData?.(buffer)\n                    })\n                } catch (error) {\n\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n        this.baseUrl = newUrl\n    }\n    getSelectOption(): React.ReactNode {\n        const id = \"websocket-\" + this.baseUrl\n        return (<MenuItem key={id} value={id}>\n            <p>Websocket <Link>{this.baseUrl}</Link></p>\n        </MenuItem>)\n    }\n    getStreamHook(): AbstractStreamHook {\n        this.streamHook.writeData = data => this.socket?.send(data)\n        return this.streamHook\n    }\n    begin() { }\n}\n\nconst WebsocketPortInfo: React.FC<{ url: string, onChange: (newPort: PortInfo) => void }> = (props) => {\n    const [state, setState] = React.useState<{ ports: PortInfo[], selected: string }>({ ports: [], selected: \"\" })\n    const timerID = useRef(-1)\n    window.clearInterval(timerID.current)\n    const localURL = props.url\n    timerID.current = window.setInterval(async () => {\n        try {\n\n            const deviceJSON = await fetch(localURL + \"/devices\")\n            const ports = await deviceJSON.json()\n            setState({ ports: ports, selected: state.selected })\n        } catch (error) {\n            console.log(error)\n        }\n    }, 1000)\n    useEffect(() => {\n        return () => {\n            console.log(\"Clearing timer \", timerID.current, \"before exit\")\n            window.clearInterval(timerID.current)\n        }\n    }, [])\n    return (\n        <Select value={state.selected} onChange={(event) => {\n            const newPort = state.ports.find(p => p.path === event.target.value)\n            if (newPort)\n                props.onChange(newPort)\n            setState({ ports: state.ports, selected: event.target.value as string })\n        }}>\n            {\n                state.ports.map(port => (\n                    <MenuItem value={port.path}>{port.path} ({port.manufacturer})</MenuItem>\n                ))\n            }\n        </Select >\n    )\n\n}\n\ninterface PortInfo {\n    path: string;\n    manufacturer?: string;\n    serialNumber?: string;\n    pnpId?: string;\n    locationId?: string;\n    productId?: string;\n    vendorId?: string;\n}\n\nconst Settings: React.FC<{ source: WebSocketDataSource }> = (props) => {\n    const [url, setURL] = React.useState<string>(props.source.baseUrl)\n    return (\n        <div>\n            <TextField defaultValue={props.source.baseUrl} onChange={(event) => {\n                props.source.setSocketUrl(event.target.value)\n                setURL(event.target.value)\n            }} />\n            <WebsocketPortInfo url={url} onChange={props.source.openPort.bind(props.source)} />\n        </div>\n    )\n}","import {  MenuItem } from \"@material-ui/core\";\nimport React from \"react\"\nimport { WebSocketDataSource } from \"./WebSocketDatasource\";\nexport class AbstractStreamHook {\n    /**this is called when data arrive on the plane */\n    onData: ((data: ArrayBuffer) => void) | null = null;\n    /** call this to send data to the plane */\n    writeData: (data: ArrayBuffer) => void = data => { };\n}\nexport interface DataSource {\n    getSelectOption(): React.ReactNode\n    getStreamHook(): AbstractStreamHook\n    getSettings(): React.ReactNode\n    close(): void\n    begin(): void\n    matchesStringValue(selectValue: string): boolean\n}\nexport class DemoDataSource implements DataSource {\n    matchesStringValue(selectValue: string) {\n        return selectValue === \"demo\"\n    }\n    hook: AbstractStreamHook = {\n        writeData: data => console.log(data),\n        onData: null\n    }\n    getSettings(): React.ReactNode {\n        return null\n    }\n    getSelectOption(): React.ReactNode {\n        return (<MenuItem key=\"demo\" value=\"demo\">Demo data</MenuItem>)\n    }\n    getStreamHook(): AbstractStreamHook {\n        return this.hook\n    }\n    close() { }\n    begin() {\n        this.hook.onData?.(sampleInputBuffer)\n    }\n}\nconst socketSource = new WebSocketDataSource()\nconst demoSource = new DemoDataSource()\nexport const dataSources = [demoSource, socketSource]\n\n\n\nconst sampleBinaryInput = \"00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 0A 5D 0A 7D 00 01 00 11 00 00 00 00 C0 41 18 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 C8 41 19 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 D0 41 1A 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 D8 41 1B 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 E0 41 1C 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 E8 41 1D 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 F0 41 1E 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 F8 41 1F 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 00 00 42 20 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 04 42 21 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 08 42 22 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 0C 42 23 00 00 00 00 00 00 00 01 00 FF 11 7B 22 6E 61 6D 65 22 3A 20 22 6C 69 73 74 22 2C 0A 20 22 73 69 7A 65 22 3A 20 38 2C 20 22 76 61 6C 75 65 73 22 3A 20 5B 0A 7B 22 6E 61 6D 65 22 3A 20 22 61 6C 74 69 74 75 64 65 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 66 6C 6F 61 74 22 7D 2C 0A 7B 22 6E 61 6D 65 22 3A 20 22 68 65 61 64 69 6E 67 22 2C 20 22 73 69 7A 65 22 3A 20 34 2C 20 22 74 79 70 65 22 3A 20 22 69 6E 74 22 7D 2C 0A 5D 0A 7D 00 01 00 11 00 00 00 00 10 42 24 00 00 00 00 00 00 00 01 \"\nconst sampleInputBuffer = new Uint8Array(sampleBinaryInput.split(\" \").map(hexString => parseInt(hexString, 16)))","import { FormControl, FormHelperText, InputLabel, makeStyles, Select } from '@material-ui/core'\nimport { Divider, Paper, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { dataSources } from '../logic/Datasource';\nimport { Logic } from '../logic/logic'\nimport \"./settings.css\"\n// const useStyles = makeStyles((theme) => ({\n//     button: {\n//         display: 'block',\n//         marginTop: theme.spacing(2),\n//     },\n//     formControl: {\n//         margin: theme.spacing(1),\n//         minWidth: 160,\n//     },\n// }));\n\n\ntype SettingsProps = {\n    logic: Logic\n}\nexport const Settings: React.FC<SettingsProps> = (props) => {\n    const [value, selectValue] = React.useState<string>(\"\")\n    //const classes = useStyles()\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        props.logic.currentDataSource?.close()\n        props.logic.currentDataSource = dataSources.find((source) => source.matchesStringValue(event.target.value as string)) || null\n        selectValue(event.target.value as string)\n    }\n    return (\n\n        <Paper className=\"settings-grid-element\">\n            <Typography component=\"h1\">Settings</Typography>\n            <Divider />\n            <FormControl className=\"settings-form\">\n                <InputLabel htmlFor=\"datasource-select\">Data source</InputLabel>\n                <Select id=\"datasource-select\" value={value} onChange={handleChange}>\n                    {dataSources.map(source => source.getSelectOption())}\n                </Select>\n                <FormHelperText>Data source to use</FormHelperText>\n            </FormControl>\n            {props.logic.currentDataSource?.getSettings()}\n        </Paper>\n    )\n}","import { Paper } from \"@material-ui/core\";\nimport React, { useRef, useState } from \"react\";\nimport { Logic } from \"../logic/logic\";\nimport \"./terminal.css\"\n\ntype TerminalProps = {\n    logic: Logic\n}\nexport const Terminal: React.FC<TerminalProps> = (props) => {\n    const [lines, setLines] = useState<string[]>([])\n    props.logic.onMessage = (input) => {\n        lines.push(input)\n        setLines(lines)\n    }\n    const inputRef = useRef<HTMLInputElement>(null)\n    const handleInput = () => {\n        if (inputRef.current) {\n            props.logic.sendMessage(inputRef.current.value)\n            inputRef.current.value = \"\"\n        }\n    }\n    return (\n        <Paper className=\"terminal\">\n            <div className=\"terminal-output-container\">\n                {lines.map((line) => (\n                    <p>{line}</p>\n                ))}\n            </div>\n            <input ref={inputRef} onKeyPress={(event) => { if (event.key === \"Enter\") handleInput() }} />\n        </Paper>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { ArtificialHorizon } from './artificialHorizon/ArtificialHorizon';\nimport { Logic } from './logic/logic';\nimport { RouteMap } from './map/RouteMap';\nimport { Navigation } from './navigation/Navigation';\nimport { Settings } from './settings/Settings';\nimport { Terminal } from './terminal/Terminal';\nclass App extends React.Component<{ logic: Logic }, {}> {\n  constructor(props: { logic: Logic }) {\n    super(props)\n    this.props.logic.onUpdate = () => {\n      this.forceUpdate()\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation>\n          {{\n            horizon: <ArtificialHorizon pitch={this.props.logic.data.pitch} bank={this.props.logic.data.bank} heading={this.props.logic.data.heading} altitude={this.props.logic.data.altitude} speed={this.props.logic.data.speed} />,\n            settings: <Settings logic={this.props.logic} />,\n            terminal: <Terminal logic={this.props.logic} />,\n            map: <RouteMap route={this.props.logic.route} />\n          }}\n        </Navigation>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Message, MessageRegistry } from \"telemetryprotocolclient/dist/index\"\nimport { StreamMessage } from \"telemetryprotocolclient/dist/Message\"\nimport { AbstractStreamHook, DataSource } from \"./Datasource\"\n\n\nexport class Logic {\n    onMessage: (message: string) => void = message => console.log(message)\n    registry: MessageRegistry | null = null\n    onUpdate: () => void\n    data = {\n        pitch: 0,\n        bank: 0,\n        heading: 0,\n        speed: 0,\n        altitude: 0\n    }\n    route: [number, number][] = [];\n    private _currentDataSource: DataSource | null = null\n    private streamHook: AbstractStreamHook | null = null\n    constructor(onUpdate = () => { }) {\n        this.onUpdate = onUpdate\n    }\n    set currentDataSource(s: DataSource | null) {\n        this._currentDataSource = s\n        this.setStreamHook(s?.getStreamHook() || null)\n        s?.begin()\n    }\n    get currentDataSource() { return this._currentDataSource }\n    private setStreamHook(streamHook: AbstractStreamHook | null) {\n        this.streamHook = streamHook\n        this.registry = new MessageRegistry()\n        this.registry.onMessage = this.onMessage\n        this.registry.onUnknownMessage = () => {\n            if (this.registry)\n                this.sendMessage(this.registry.messageDefinitionMessage)\n        }\n        if (streamHook)\n            streamHook.onData = (data) => {\n                if (!this.registry)\n                    return\n                const lat = this.registry.basicSensorValues.find(val => val.name === \"latitude\")\n                const lon = this.registry.basicSensorValues.find(val => val.name === \"longitude\")\n                if (lat && lon) {\n                    // lon is updated too if lat is updated\n                    lat.onUpdate = () => {\n                        this.route.push([lat.value, lon.value])\n                    }\n                }\n                this.registry.readData(data)\n                for (const sensVal of this.registry.basicSensorValues || []) {\n                    if (Object.keys(this.data).includes(sensVal.name)) {\n                        (this.data as any)[sensVal.name] = sensVal.value\n                    }\n                }\n                this.onUpdate()\n            }\n    }\n    sendMessage(message: Message | string) {\n        if (!this.registry)\n            return\n        if (typeof message === 'string') {\n            this.registry.streamMessage.append(message)\n            this.sendMessage(this.registry.streamMessage)\n        } else if (message.value.name === \"stream\") {\n            //Use custom encoding when sending text messages\n            this.currentDataSource?.getStreamHook().writeData((message as StreamMessage).encodeAndFlush())\n        } else {\n            const toSend = this.registry.encodeMessage(message)\n            this.currentDataSource?.getStreamHook().writeData(toSend)\n        }\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Logic } from './logic/logic';\nimport \"leaflet\";\n//const socket = new WebSocket(\"localhost:8081\")\nconst logic = new Logic()\nReactDOM.render(\n  <React.StrictMode>\n    <App logic={logic} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SensorValueList = exports.NumberSensorValue = exports.getNumberParser = exports.parsers = exports.SensorValue = void 0;\nclass SensorValue {\n    constructor() {\n        this.name = \"\";\n        this.size = 0;\n        this.onUpdate = () => { };\n        this.replaceBasicSensorValues = (knownSet) => this;\n    }\n}\nexports.SensorValue = SensorValue;\nexports.parsers = {\n    uint8: {\n        name: \"uint8\",\n        size: 1,\n        parse: (raw) => new Uint8Array(raw)[0],\n        serialize: (number) => new Uint8Array([number])\n    },\n    uint16: {\n        name: \"uint16\",\n        size: 2,\n        parse: (raw) => new Uint16Array(raw)[0],\n        serialize: (number) => new Uint16Array([number])\n    },\n    uint32: {\n        name: \"uint32\",\n        size: 4,\n        parse: (raw) => new Uint32Array(raw)[0],\n        serialize: (number) => new Uint32Array([number])\n    },\n    int8: {\n        name: \"int8\",\n        size: 1,\n        parse: (raw) => new Int8Array(raw)[0],\n        serialize: (number) => new Int8Array([number])\n    },\n    int16: {\n        name: \"int16\",\n        size: 2,\n        parse: (raw) => new Int16Array(raw)[0],\n        serialize: (number) => new Int16Array([number])\n    },\n    int32: {\n        name: \"int32\",\n        size: 4,\n        parse: (raw) => new Int32Array(raw)[0],\n        serialize: (number) => new Int32Array([number])\n    },\n    float32: {\n        name: \"float32\",\n        size: 4,\n        parse: (raw) => new Float32Array(raw)[0],\n        serialize: (number) => new Float32Array([number])\n    },\n    float64: {\n        name: \"float64\",\n        size: 4,\n        parse: (raw) => new Float64Array(raw)[0],\n        serialize: (number) => new Float64Array([number])\n    },\n};\n/**\n *\n * @param numberType for example int or float\n * @param size in bytes\n * @returns number parser\n */\nconst getNumberParser = (numberType, size) => {\n    return exports.parsers[numberType + (8 * size)];\n};\nexports.getNumberParser = getNumberParser;\nclass NumberSensorValue extends SensorValue {\n    constructor(name, parser) {\n        super();\n        this.value = 0;\n        this.name = name;\n        this.parser = parser;\n        this.size = parser.size;\n        this.replaceBasicSensorValues = (knownValues) => {\n            const foundValue = knownValues.find(val => val.name == this.name);\n            return foundValue == undefined ? this : foundValue;\n        };\n    }\n    getBasicSensorValues() {\n        return [this];\n    }\n    parse(message) {\n        this.value = this.parser.parse(message);\n        return true;\n    }\n    serialize() {\n        return this.parser.serialize(this.value);\n    }\n}\nexports.NumberSensorValue = NumberSensorValue;\nclass SensorValueList extends SensorValue {\n    constructor(sensorValues) {\n        super();\n        this.sensorValues = sensorValues;\n        this.sensorValues.forEach(val => this.size += val.size);\n        this.replaceBasicSensorValues = (knownSet) => {\n            for (const i in this.sensorValues) {\n                this.sensorValues[i] = this.sensorValues[i].replaceBasicSensorValues(knownSet);\n            }\n            return this;\n        };\n    }\n    getBasicSensorValues() {\n        return this.sensorValues.filter(val => val instanceof NumberSensorValue);\n    }\n    parse(message) {\n        var _a;\n        let position = 0;\n        for (let sensorValue of this.sensorValues) {\n            sensorValue.parse(message.slice(position, position + sensorValue.size));\n            position += sensorValue.size;\n            (_a = sensorValue.onUpdate) === null || _a === void 0 ? void 0 : _a.call(sensorValue);\n        }\n        return position == this.size;\n    }\n    serialize() {\n        const toReturn = new Uint8Array(this.size);\n        let position = 0;\n        for (let sens of this.sensorValues)\n            [\n                toReturn.set(new Uint8Array(sens.serialize()), 0)\n            ];\n        return toReturn;\n    }\n}\nexports.SensorValueList = SensorValueList;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamMessage = exports.Message = void 0;\nconst SensorValue_1 = require(\"./SensorValue\");\nclass Message {\n    constructor(value, id) {\n        if (id <= 1 || id > 255) {\n            throw new Error(\"id not in valid range\");\n        }\n        this.id = id;\n        this.value = value;\n    }\n    parse(toParse) {\n        var _a, _b;\n        if (new Uint8Array(toParse).length != this.value.size) {\n            //return false if wrong length or stream with too big length\n            if (this.value.name !== \"stream\" || new Uint8Array(toParse).length > this.value.size)\n                return false;\n        }\n        this.value.parse(toParse);\n        (_b = (_a = this.value).onUpdate) === null || _b === void 0 ? void 0 : _b.call(_a);\n        return true;\n    }\n}\nexports.Message = Message;\nconst STREAM_MESSAGE_ID = 254;\nclass StreamMessageSensorValue extends SensorValue_1.SensorValue {\n    constructor(size = 500, onMessage = (s) => console.log(s)) {\n        super();\n        this.name = \"stream\";\n        this.outputBuffer = [];\n        this.size = size;\n        this.onMessage = onMessage;\n    }\n    getBasicSensorValues() { return []; }\n    parse(m) {\n        //remove zero-byte with slice\n        this.onMessage(new TextDecoder().decode(m.slice(0, m.byteLength - 1)));\n        return true;\n    }\n    serialize() {\n        console.error(\"You cannot serialize a string message!\");\n        return new ArrayBuffer(0);\n    }\n}\nclass StreamMessage extends Message {\n    constructor(onMessage = (s) => console.log(s)) {\n        super(new StreamMessageSensorValue(500, onMessage), STREAM_MESSAGE_ID);\n        this._value = this.value;\n    }\n    append(message) {\n        this._value.outputBuffer.push(message);\n    }\n    /**encode all buffered messages to an Arraybuffer, remove them from the queue and return the buffer */\n    encodeAndFlush() {\n        const encodeString = (s) => {\n            const toEncode = new TextEncoder().encode(s);\n            const target = [0, this.id];\n            for (const byte of toEncode) {\n                target.push(byte);\n                if (byte === 0)\n                    target.push(0);\n            }\n            // Add encoded null byte and end of message bytes\n            target.push(0, 0, 0, 1);\n            return new Uint8Array(target);\n        };\n        const encodedMessages = this._value.outputBuffer.map(s => encodeString(s));\n        this._value.outputBuffer = [];\n        return encodedMessages.reduce((prev, curr) => Uint8Array.from([...prev, ...curr]));\n    }\n}\nexports.StreamMessage = StreamMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberSensorValue = exports.SensorValueList = exports.MessageRegistry = exports.Message = void 0;\nconst Message_1 = require(\"./Message\");\nObject.defineProperty(exports, \"Message\", { enumerable: true, get: function () { return Message_1.Message; } });\nconst MessageRegistry_1 = require(\"./MessageRegistry\");\nObject.defineProperty(exports, \"MessageRegistry\", { enumerable: true, get: function () { return MessageRegistry_1.MessageRegistry; } });\nconst SensorValue_1 = require(\"./SensorValue\");\nObject.defineProperty(exports, \"SensorValueList\", { enumerable: true, get: function () { return SensorValue_1.SensorValueList; } });\nObject.defineProperty(exports, \"NumberSensorValue\", { enumerable: true, get: function () { return SensorValue_1.NumberSensorValue; } });\n"],"sourceRoot":""}